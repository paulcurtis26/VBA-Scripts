'### This is an .ebs file generated by KSCheckout.
'### It can be checked in to the repository by invoking kscheckin.
'###
'### SQL_SSIDataSpace

'$Revision: 2 $

'### Begin KP-Version Section
Const AppManID = "3.0.361.8.2"
Const KSVerID = "3.0"
'Comment=  Changed to Command Post 3.0 Syntax
'### End KP-Version Section

'### Begin KP-Status Section
'NeedKPW = 1
'AdminOnly = 0
'DisplayToolBar = 1
'IAmDiscovery = 0
'IAmAction = 0
'Description = Monitors the data available space in a database.  If the space is lower than the specified threshold, the selected action is taken.

'### End KP-Status Section

'### Begin KPC Section
'Parameters = 0 128 0 8 1 0 0 2147483647 0 99991231 0 235959

'### End KPC Section

'### Begin Type Section
Const SQLT_DatabaseObj = ""

'### End Type Section

'### Begin KPP Section

'### Author 		: NetIQ
'### Version		: 1.0
'### Description	: Monitors SQL Server Dataspace for all databases

'### Changed by		: Dayanand Sankar (713) 245-1556 (Property of Shell Services International)
'### Date			: 6/5/97
'### Revision       : 1.0
'### Enhancements 	: -Change to accomodate 'n' consecutive times of occurrences for dataspace exceeding thresholds
'###				  -Initial Clear message and Clear message after a threshold has been 
'###				   reached and then falling below that threshold 'n' consecutive times.
'###				  -Also event messages are formatted to represent 
'###				   Counter, Value and Number with only spaces seperating these three entities.
'###
'### Changed by		: Paul Curtis (171) 257-7373 (Property of Shell Services International)
'### Date			: 1/9/99
'### Revision       : 3.0
'### Enhancements 	: -Changed to Command Post 3.0 Syntax


' [V<CPReady. Monitors the available data space (in MB) and the used data space(in %) in a db. When ANY database's available space is lower than the threshold, an event is raised. (Version 3.0)>V]
' [A<When the available space is lower than the threshold, the selected action is taken.>A]
Const DO_EVENT = "y" '[M<Event? (y/n)>M][T<string,1,' ',yn">T]
Const DO_DATA = "n" '[M<Collect Data? (y/n)>M][T<string,1,' ',yn">T]
Const DO_NUMBERS = "y" '[M<Show numbers? (y/n)>M][T<string,1,' ',yn">T]
Const SEND_NORMAL = "y" '[M<Send Event when Data Space is Normal? (y/n)>M][T<string,1,' ',yn">T]
Const TH_FREE = 0.5 '[M<Available Space < >M][T<integer,1,' ',0,9999,MB>T]
Const TH_UTIL = 90 '[M<Space Util > >M][T<integer,1,' ',0,100,%>T]
Const CONSEC_TIME = 3 		'[M<Consecutive times>M] [T<long,,,1, 999999, #>T]
Const Severity = 5 '[M<Event Severity>M][T<integer,1,' ',1,40,SevLevel>T]
Const AKPID = "AKP_NULL" '[M<Action taken>M]

'### End KPP Section

'### Begin KPS Section
Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) As Long
Dim SQL As Object
Dim DBSpace As Object

Private FreeFailCount() As Integer
Private FreeClearCount() As Integer
Private FreeNormalClear() As Boolean
Private FreeFirstClearCount() As Integer
Private FreeFirstClear() As Boolean

Private UtilFailCount() As Integer
Private UtilClearCount() As Integer
Private UtilNormalClear() As Boolean
Private UtilFirstClearCount() As Integer
Private UtilFirstClear() As Boolean

Private ThrFailCount() As Integer
Private ThrClearCount() As Integer
Private ThrNormalClear() As Boolean
Private ThrFirstClearCount() As Integer
Private ThrFirstClear() As Boolean

Function AlterString(ByRef sString As String, ByRef sCharToReplace As String, ByRef sCharToReplaceWith As String) As String

    Dim nLen As Long
    Dim sTemp As String
    Dim sTemp1 As String
    Dim I As Long
    
    nLen = Len(sString)
    
    For I = 1 To nLen
        sTemp = Mid(sString, I, 1)
        If sTemp = sCharToReplace Then
            sTemp = sCharToReplaceWith
        End If
        sTemp1 = sTemp1 + sTemp
    Next I
    AlterString = sTemp1
    
End Function

Dim Machinenamestr As String

Sub Main()
 	Dim longm As String
	Dim DetailMsg As String
   	Dim dbname$
   	Dim legend$
	Dim eventmsg As String
	Dim resname$
	Dim I As Long
	Dim numdb As Long
	Dim passwd$
	Dim free As Double
	Dim util As Double
	Dim freeErrorCode As Long
	Dim freeErrorMsg As String
	Dim utilErrorCode As Long
	Dim utilErrorMsg As String

	If iterationcount() =1 Then
    	Dim NameSize As Long
	    Dim X As Long
		Dim Machinename1 As String
		Dim y As Integer
    	MachineName1 = Space$(16)
	    NameSize = Len(MachineName1)
    	X = GetComputerName(Machinename1,NameSize)
		For y = 1 To Len(Machinename1)
			If ASC(Mid(Machinename1,y,1)) <> 0 Then
				Machinenamestr = Machinenamestr + Mid(Machinename1,y,1)
			End If
		Next y
		Machinenamestr = lcase(trim(Machinenamestr))
	End If

	Set SQL = CreateObject("NetiQAgent.SQL")
	Set DBSpace =  SQL.Space

	passwd = GetSqlPassword("", "sa")

	numdb = ItemCount(SQLT_DatabaseObj, ",")

	ReDim Preserve FreeFailCount(1 To numdb)
	ReDim Preserve FreeClearCount(1 To numdb)
	ReDim Preserve FreeNormalClear(1 To numdb) 
	ReDim Preserve FreeFirstClearCount(1 To numdb) 
	ReDim Preserve FreeFirstClear(1 To numdb) 

	ReDim Preserve UtilFailCount(1 To numdb)
	ReDim Preserve UtilClearCount(1 To numdb)
	ReDim Preserve UtilNormalClear(1 To numdb) 
	ReDim Preserve UtilFirstClearCount(1 To numdb) 
	ReDim Preserve UtilFirstClear(1 To numdb) 
	
	ReDim Preserve ThrFailCount(1 To numdb)
	ReDim Preserve ThrClearCount(1 To numdb)
	ReDim Preserve ThrNormalClear(1 To numdb) 
	ReDim Preserve ThrFirstClearCount(1 To numdb) 
	ReDim Preserve ThrFirstClear(1 To numdb) 

	For I = 1 To numdb
		dbname = Item$(SQLT_DatabaseObj, I,, ",") 
		free = DBSpace.DataSpaceAvailValue("sa", passwd, dbname, freeErrorCode, freeErrorMsg)
		util = DBSpace.DataSpaceUtilValue("sa", passwd, dbname, utilErrorCode, utilErrorMsg)

		resname = "SQLT_DatabaseObj = " & dbname

		If freeErrorCode = -1 Then
			free = -1
			FreeFailCount(I) = FreeFailCount(I) + 1
			FreeFirstClear(I) = -1
			If FreeClearCount(I) <> 0 And FreeClearCount(I) < CONSEC_TIME Then
				FreeClearCount(I) = 0
			End If
			If FreeFirstClearCount(I) <> 0 And FreeFirstClearCount(I) < CONSEC_TIME Then
				FreeFirstClearCount(I) = 0
			End If
			If FreeFailCount(I) = CONSEC_TIME Then
				Shortmsg = Machinenamestr & AlterString(dbname, " ", "-") & " ERROR NULL"
				MSActions Severity, Shortmsg, AKPID, resname, freeErrorMsg
				FreeNormalClear(I) = -1
				FreeClearCount(I) = 0
				FreeFirstClearCount(I) = 0
			End If
		Else
			FreeClearCount(I) = FreeClearCount(I) + 1
			FreeFirstClearCount(I) = FreeFirstClearCount(I) + 1
			If FreeFailCount(I) <> 0 And FreeFailCount(I) < CONSEC_TIME Then
				FreeFailCount(I) = 0
			End If
			If FreeClearCount(I) = CONSEC_TIME And FreeNormalClear(I) = -1 Then
				Detailmsg = "Successfully-obtained-dataspace-available " & Format$(free, "0.00")
				If DO_NUMBERS = "y" Then
					Shortmsg = Machinenamestr & AlterString(dbname, " ", "-") & " AVAIL " & Format$(free, "0.00")
				Else
					Shortmsg = Machinenamestr & AlterString(dbname, " ", "-") & " AVAIL NULL"
				End If
				MSActions 40, Shortmsg, AKPID, "", Detailmsg
				FreeFailCount(I) = 0
				FreeFirstClear(I) = -1
				FreeFirstClearCount(I) = 0
				FreeNormalClear(I) = 0
			End If
			If FreeFirstClearCount(I) = CONSEC_TIME And FreeNormalClear(I) <> -1 And FreeFirstClear(I) <> -1 Then
				Detailmsg = "Successfully-obtained-dataspace-available " & Format$(free, "0.00")
				If DO_NUMBERS = "y" Then
					Shortmsg = Machinenamestr & AlterString(dbname, " ", "-") & " AVAIL " & Format$(free, "0.00")
					MSActions 40, Shortmsg, AKPID, "", Detailmsg
				Else
					Shortmsg = Machinenamestr & AlterString(dbname, " ", "-") & " AVAIL NULL"
					MSActions 40, Shortmsg, AKPID, "", Detailmsg
				End If
				FreeFailCount(I) = 0
				FreeFirstClear(I) = -1
				FreeFirstClearCount(I) = 0
				FreeClearCount(I) = 0
			End If
		
		End If				
		
		If utilErrorCode = -1 Then
			util = -1

			UtilFailCount(I) = UtilFailCount(I) + 1
			UtilFirstClear(I) = -1
			If UtilClearCount(I) <> 0 And UtilClearCount(I) < CONSEC_TIME Then
				UtilClearCount(I) = 0
			End If
			If UtilFirstClearCount(I) <> 0 And UtilFirstClearCount(I) < CONSEC_TIME Then
				UtilFirstClearCount(I) = 0
			End If
			If UtilFailCount(I) = CONSEC_TIME Then
				Shortmsg = Machinenamestr & " " & AlterString(dbname, " ", "-") & " ERROR NULL"
				MSActions Severity, Shortmsg, AKPID, resname, freeErrorMsg
				UtilNormalClear(I) = -1
				UtilClearCount(I) = 0
				UtilFirstClearCount(I) = 0
			End If
		Else
			UtilClearCount(I) = UtilClearCount(I) + 1
			UtilFirstClearCount(I) = UtilFirstClearCount(I) + 1
			If UtilFailCount(I) <> 0 And UtilFailCount(I) < CONSEC_TIME Then
				UtilFailCount(I) = 0
			End If
			If UtilClearCount(I) = CONSEC_TIME And UtilNormalClear(I) = -1 Then
				Detailmsg = "Successfully-obtained-dataspace-utilization " & Format$(util, "0.00")
				If DO_NUMBERS = "y" Then
					Shortmsg = Machinenamestr & " " & AlterString(dbname, " ", "-") & " USED " & Format$(util, "0.00")
					MSActions 40, Shortmsg, AKPID, "", Detailmsg
				Else
					Shortmsg = Machinenamestr & " " & AlterString(dbname, " ", "-") & " USED NULL"
					MSActions 40, Shortmsg, AKPID, "", Detailmsg
				End If
				UtilFailCount(I) = 0
				UtilFirstClear(I) = -1
				UtilFirstClearCount(I) = 0
				UtilNormalClear(I) = 0
			End If
			If UtilFirstClearCount(I) = CONSEC_TIME And UtilNormalClear(I) <> -1 And UtilFirstClear(I) <> -1 Then
				Detailmsg = "Successfully-obtained-dataspace-available " & Format$(free, "0.00")
				If DO_NUMBERS = "y" Then
					Shortmsg = Machinenamestr & " " & AlterString(dbname, " ", "-") & " USED " & Format$(util, "0.00")
					MSActions 40, Shortmsg, AKPID, "", Detailmsg
				Else
					Shortmsg = Machinenamestr & " " & AlterString(dbname, " ", "-") & " USED NULL"
					MSActions 40, Shortmsg, AKPID, "", Detailmsg
				End If
				UtilFailCount(I) = 0
				UtilFirstClear(I) = -1
				UtilFirstClearCount(I) = 0
				UtilClearCount(I) = 0
			End If
		
		End If	

		If free = -1 Or util = -1 Then
			GoTo continue
		End If

		If DO_EVENT = "y" Then
			If free < TH_FREE Or util > TH_UTIL Then
			
				If free < TH_FREE Then
					eventmsg = Format$(free, "0.00") & "MB"
	    			longm = "The data (" & dbname & ")'s available space is " & Format$(free, "0.00") & "; <TH = " & CStr(TH_FREE) & chr$(10)
				End If

				If util > TH_UTIL Then
					eventmsg = eventmsg & Format$(util, "0.00") & "%"	
	    			longm = longm & "The data (" & dbname & ") is " & Format$(util, "0.00") & "% full; >TH = " & Cstr(TH_UTIL)  	
				End If

				ThrFailCount(I) = ThrFailCount(I) + 1
				ThrFirstClear(I) = -1
				If ThrClearCount(I) <> 0 And ThrClearCount(I) < CONSEC_TIME Then
					ThrClearCount(I) = 0
				End If
				If ThrFirstClearCount(I) <> 0 And ThrFirstClearCount(I) < CONSEC_TIME Then
					ThrFirstClearCount(I) = 0
				End If
				If ThrFailCount(I) = CONSEC_TIME Then
					If DO_NUMBERS = "y" Then
						eventmsg = Machinenamestr & " " &  AlterString(dbname, " ", "-") & " EXCEEDED " & eventmsg
					Else
						eventmsg = Machinenamestr & " " &  AlterString(dbname, " ", "-") & " EXCEEDED NULL"
					End If
					MSActions Severity, eventmsg, AKPID, resname, longm
					eventmsg = ""
					ThrNormalClear(I) = -1
					ThrClearCount(I) = 0
					ThrFirstClearCount(I) = 0
				End If
			
			Else
				
				ThrClearCount(I) = ThrClearCount(I) + 1
				ThrFirstClearCount(I) = ThrFirstClearCount(I) + 1
				If ThrFailCount(I) <> 0 And ThrFailCount(I) < CONSEC_TIME Then
					ThrFailCount(I) = 0
				End If
				longm = "The data (" & dbname & ")'s available space is " & Format$(free, "0.00") & "; >TH = " & CStr(TH_FREE) & chr$(10)
	    		longm = longm & "The data (" & dbname & ") is " & Format$(util, "0.00") & "% full; <TH = " & Cstr(TH_UTIL)  	
				
				If ThrClearCount(I) = CONSEC_TIME And ThrNormalClear(I) = -1 Then
					If DO_NUMBERS = "y" Then
						eventmsg = Machinenamestr & " " &  AlterString(dbname, " ", "-") & " NORMAL " & Format$(free, "0.00")
					Else
						eventmsg = Machinenamestr & " " &  AlterString(dbname, " ", "-") & " NORMAL NULL"
					End If

					If SEND_NORMAL = "y" Then
						MSActions 40, eventmsg, AKPID, "", longm
					Else
						If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
							MSActions 40, eventmsg, AKPID, "", longm
						End If
					End If
					ThrFailCount(I) = 0
					ThrFirstClear(I) = -1
					ThrFirstClearCount(I) = 0
					ThrNormalClear(I) = 0
				End If
				If ThrFirstClearCount(I) = CONSEC_TIME And ThrNormalClear(I) <> -1 And ThrFirstClear(I) <> -1 Then
					If DO_NUMBERS = "y" Then
						eventmsg = Machinenamestr & " " &  AlterString(dbname, " ", "-") & " NORMAL " & Format$(free, "0.00")
					Else
						eventmsg = Machinenamestr & " " &  AlterString(dbname, " ", "-") & " NORMAL NULL"
					End If
					If SEND_NORMAL = "y" Then
						MSActions 40, eventmsg, AKPID, "", longm
					Else
						If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
							MSActions 40, eventmsg, AKPID, "", longm
						End If
					End If
					ThrFailCount(I) = 0
					ThrFirstClear(I) = -1
					ThrFirstClearCount(I) = 0
					ThrClearCount(I) = 0
				End If

			End If
		End If

continue:

		If DO_DATA = "y" Then
			If IterationCount() = 1 Then
				DataHeader "Available data (" & dbname & ") space^^MB", 0, I
				DataHeader "Data (" & dbname & ") space util^^%", 0, I+1000
 			End If
			DataLog I, free, "Avail MB= " & Format$(free, "0.00") & chr$(10) & "Used %= " & Format$(util, "0.00") & chr$(10)
			DataLog I+1000, util, "Avail MB= " & Format$(free, "0.00") & chr$(10) & "Used %= " & Format$(util, "0.00") & chr$(10)
		End If

	Next I

End Sub

'### End KPS Section


