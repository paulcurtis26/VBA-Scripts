'### 
'### NT_SSICPULoaded
'###

'$Revision: 1 $

'### Begin KP-Version Section
Const AppManID = "3.0.361.8.1"
Const KSVerID = "3.0"
'Comment=  Monitors all CPU's, Auto Detects CPU's Installed
'### End KP-Version Section

'### Begin KP-Status Section
'NeedKPW = 0				' NeedKPW bit is 0
'AdminOnly = 0				' AdminOnly bit is 0
'DisplayToolBar = 1			' DisplayToolBar bit is 1
'Description = Monitors CPU Usage and alerts if threshold is exceeded
'### End KP-Status Section

'### Begin KPC Section
'KPC = ThirtyM
'### End KPC Section

'### Begin Type Section
Const NT_MachineFolder = ""
'### End Type Section

'### Begin KPP Section

'### Created by		: Paul Curtis 171 257 7373 (Property of Shell Services International)
'### Date			: 05/01/2000
'### Revision       : 3.2
'### Enhancements 	: Monitors all CPU's Auto Detect CPU's installed

'[V<CPReady, Monitor CPU usage, Monitoring of Total CPU usage only available with Windows 2000.(Version 3.0b)>V]
Const DO_EVENT = "y"	'[M<Event? (y/n)>M] [T<String,1,,"yn">T]
Const DO_DATA = "y"		'[M<Collect Data? (y/n)>M] [T<String,1,,"yn">T]
Const DO_NUMBERS = "y" 	'[M<Show numbers? (y/n)>M][T<string,1,' ',yn">T]
Const ALL_CPU = "y" 	'[M<Monitor Total CPU Usage (W2K Only)? (y/n)>M][T<string,1,' ',yn">T]
Const THRESHOLD1 = 1	'[M<Threshold Value for any CPU > >M] [T<Integer,,, 0, 100, # >T]
Const THRESHOLD2 = 1	'[M<Threshold Value for Total CPU (W2K Only)> >M] [T<Integer,,, 0, 100, # >T]
Const SEND_NORMAL = "y"	'[M<Send Mesage When NDR is Normal (AutoClear Message) ? (y/n)>M] [T<String,1,,"yn">T]
Const CONSEC_TIME = 1	'[M<Consecutive times>M] [T<long,,,1, 999999, #>T]
Const Sev_Exceeded = 5	'[M<Event Severity - Exceeded>M] [T<Integer,,,1, 40, SevLevel>T]
Const Sev_Normal = 40 	'[M<Event Severity - Normal>M] [T<Integer,,,1, 40, SevLevel>T]
Const DO_DEBUG = "n"	'[M<Write Debug Information to File? (y/n)>M] [T<String,1,,"yn">T]
'[A<When the Threshold is exceeded, the selected action is taken. >A]
Const AKPID = "AKP_NULL"	' [M<Action taken>M]
'### End KPP Section

'### Begin KPS Section
Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) As Long
Dim NT As Object
Dim OBJ As Object
Dim Machinenamestr As String
'These store the info about each Counter to be monitored
'THe value here should equal the amount of times the function GetCounterValue
'is called from the main() Routine
Dim ConTimesOver() As Integer	  
Dim ConTimesUnder() As Integer
Dim EventFired() As Boolean
Dim CPUnumber As Integer
Dim CPUcount As Integer
Dim InstanceName As String

Function createdebugdir() As Integer
	On Error Resume Next

	Dim dirname As String 
	dirname = "c:\NetIQ_KSdebug\"

	MkDir dirname
	If Err <> 0 Then
		createdebugdir = Err
	Else
		createdebugdir = 0
	End If

End Function


Function AlterString(sString As String, sCharToReplace As String, sCharToReplaceWith As String) As String

    Dim nLen As Long
    Dim sTemp As String
    Dim sTemp1 As String
    Dim I As Long
    
    nLen = Len(sString)
    
    For I = 1 To nLen
        sTemp = Mid(sString, I, 1)
        If sTemp = sCharToReplace Then
            sTemp = sCharToReplaceWith
        End If
        sTemp1 = sTemp1 + sTemp
    Next I
    AlterString = sTemp1
    
End Function
	
Sub GetCounterValue(ObjectName As String, CounterName As String, InstanceName As String, nDataID As Integer, TH_OVER As Integer)
	Dim dval As Double
	Set NT = CreateObject("NetiQAgent.NT")
	Set OBJ = NT.System

	dval = OBJ.CounterValue(ObjectName, CounterName, InstanceName)

	If dval = -1 Then
		resmsg = "NT_MachineFolder = " & NT_MachineFolder
		longmsg = "Can't get value of " & ObjectName & " " & CounterName & " " & InstanceName
		shortmsg = 	"Can't get value of " & CounterName
		MCAbort resmsg, shortmsg
	End If
	If DO_EVENT = "y" And dval > TH_OVER Then
		ConTimesOver(nDataID) = ConTimesOver(nDataID) + 1
		ConTimesUnder(nDataID)=0
		If ConTimesOver(nDataID) = CONSEC_TIME Then
			resmsg = "NT_MachineFolder = " & NT_MachineFolder
			longmsg = "Counter value for CPU(" & InstanceName & ") is " & _
				CStr(dval) & "% ; >TH = " & Cstr(TH_OVER) & "%"
			If DO_NUMBERS = "y" Then
				ShortMsg = MachineNamestr & " " & AlterString("CPU(" & InstanceName & ")"," ","-") & " EXCEEDED " & CStr(dval)
			Else
				ShortMsg = MachineNamestr & " " & AlterString("CPU(" & InstanceName & ")"," ","-") & " EXCEEDED NULL"
			End If
			MSActions Sev_Exceeded, shortmsg, AKPID, resmsg, longmsg
			ConTimesOver(nDataID) = 0 
			EventFired(nDataID) = true
		End If
	End If


	If DO_EVENT = "y" And dval < TH_OVER Then
		ConTimesUnder(nDataID) = ConTimesUnder(nDataID) + 1
		'Stops Var overflowing if continually alright
		If ConTimesUnder(nDataID) = 100 Then
			ConTimesUnder(nDataID) = 99
		End If
		ConTimesOver(nDataID) = 0 
		If ConTimesUnder(nDataID) = CONSEC_TIME And EventFired(nDataID) = True Then
			resmsg = "NT_MachineFolder = " & NT_MachineFolder
			longmsg = "Counter value for CPU(" & InstanceName & ") is " & _
				CStr(dval) & "% ; <TH = " & Cstr(TH_OVER) & "%"
			If DO_NUMBERS = "y" Then
				ShortMsg = MachineNamestr & " " & AlterString("CPU(" & InstanceName & ")"," ","-") & " NORMAL " & CStr(dval)
			Else
				ShortMsg = MachineNamestr & " " & AlterString("CPU(" & InstanceName & ")"," ","-") & " NORMAL NULL"
			End If
			If SEND_NORMAL = "y" Then
				MSActions Sev_Normal, shortmsg, AKPID, resmsg, longmsg
			Else
				If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
					MSActions Sev_Normal, shortmsg, AKPID, resmsg, longmsg
				End If
			End If
			ConTimesUnder(nDataID) = 0 
			EventFired(nDataID) = false
		End If
	End If

	' Check threshold, and do action

	' Do graphing
	If DO_DATA = "y" Then
		If IterationCount() = 1 Then
			DataHeader "Counter Value for CPU(" & InstanceName & ") Utilisation ^^%" , 0, nDataID
		End If
		DataLog nDataID, dval, "CPU Usage Value : " & str(dval)	& "%"
	End If

End Sub

Sub Main()
	On Error GoTo Main_Error
	Set NT = CreateObject("NetiQAgent.NT")
	Set OBJ = NT.System


	Dim agntmsg As String
	Dim lastcomma As Integer
	Dim KSName As String 
	Dim CpuStartPos As Integer
	Dim InstancePointer As Integer
	Dim createret As Integer

	If DO_DEBUG = "y" Then
		KSName = "NT_SSICPULoadedtest"
		If iterationcount() =1 Then
			createret = createdebugdir	'Use Function to Create Directory if its not already there
		End If
		If FileExists("c:\NetIQ_KSdebug\" & KSName & ".txt") Then

			If filelen("c:\NetIQ_KSdebug\" & KSName & ".txt") > 512000 Then

				If FileExists("c:\NetIQ_KSdebug\" & KSName & ".old") Then
					kill "c:\NetIQ_KSdebug\" & KSName & ".old"
				End If

				Name "c:\NetIQ_KSdebug\" & KSName & ".txt" As "c:\NetIQ_KSdebug\" & KSName & ".old"

			End If
		End If
		Open "c:\NetIQ_KSdebug\" & KSName & ".txt" For Append Access Write As #2
		Print #2, now() & "       " &  ""
	End If
	
	If iterationcount() =1 Then
		If DO_DEBUG = "y" Then 
			Print #2, now() & "       " &  "Retrieving list of CPU's"
		End If

		CPUnumber = OBJ.Instancevalue("Processor","% Processor time",0,agntmsg,1)
		'Check if number of CPU has been returned
		If CPUnumber = -1 Then
			If DO_DEBUG = "y" Then 
				Print #2, now() & "       " &  "Failed to Retrieve list of CPU'S"
			End If
			detailmsg = "Error Retrieving number of CPU'S installed on server"
			MCAbort resname, detailmsg
		Else
			'if it has, create InstanceName and instindex from the CPU Count
			If DO_DEBUG = "y" Then 
				Print #2, now() & "       " &  "Number of CPU instances Found : " &  str(CPUnumber)
				Print #2, now() & "       " &  "		agntmsg Names		  : " &  agntmsg
			End If

			For I = 1 To CPUNumber
				InstanceName = InstanceName & Item$(agntmsg,I,,chr$(10)) & ","
				If DO_DEBUG = "y" Then 
					Print #2, now() & "       " &  "						" & Item$(InstanceName,I,,",")
					Print #2, now() & "       " &  "						" & InstanceName
				End If
			Next I

			'Trim last "," from both var's
			lastcomma = Len(InstanceName) -1
			InstanceName = Mid(InstanceName,1,lastcomma)
			CPUcount = itemcount(InstanceName,",")
			ReDim ConTimesOver(CPUcount) 
			ReDim ConTimesUnder(CPUcount) 
			ReDim EventFired(CPUcount) 

			If DO_DEBUG = "y" Then 
				Print #2, now() & "       " &  "InstanceName : " & InstanceName
			End If

		End If
	End If


	If iterationcount() = 1 Then
	    Dim NameSize As Long
    	Dim X As Long
		Dim Machinename1 As String
		Dim y As Integer
	    MachineName1 = Space$(16)
    	NameSize = Len(MachineName1)
	    X = GetComputerName(Machinename1,NameSize)
		For y = 1 To Len(Machinename1)
			If ASC(Mid(Machinename1,y,1)) <> 0 Then
				Machinenamestr = Machinenamestr + Mid(Machinename1,y,1)
			End If
		Next y
		Machinenamestr = lcase(trim(Machinenamestr))
	
	End If
	If DO_DEBUG = "y" Then 
		Print #2, now() & "       " &  "						" & "Number of CPU's  : " & str(CPUcount)
	End If


	For InstancePointer= 1 To CPUcount
		If DO_DEBUG = "y" Then 
			Print #2, now() & "       " &  "						" & "Checkin CPU   : " & Item$(InstanceName,InstancePointer,,",")
		End If
		If Item$(InstanceName,InstancePointer,,",")	= "_Total" Then
			If ALL_CPU = "y" Then
				If DO_DEBUG = "y" Then 
					Print #2, now() & "       " &  "						" & "Set to monitor total CPU usage"
				End If
				GetCounterValue  "Processor", "% Processor Time",Item$(InstanceName,InstancePointer,,","),InstancePointer-1,THRESHOLD2
			End If
		Else
			GetCounterValue  "Processor", "% Processor Time",Item$(InstanceName,InstancePointer,,","),InstancePointer-1,THRESHOLD1
		End If 
	Next InstancePointer

	
	'Create one row for each counter

	If DO_DEBUG = "y" Then 
		Close #2
	End If
	GoTo ExitMain
Main_Error:
	If DO_DEBUG = "y" Then 
		Print #2, now() & "       " & "Error has occurred " & Err.Description
		Close #2
	End If
	MCAbort "", "Error has occurred " & Err.Description

ExitMain:

End Sub

'### End KPS Section
