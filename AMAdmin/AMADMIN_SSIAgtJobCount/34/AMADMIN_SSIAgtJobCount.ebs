'### This is an .ebs file generated by KSCheckout.
'### It can be checked in to the repository by invoking kscheckin.
'###
'### AMADMIN_SSIAgtJobCount

'$Revision: 2 $

'### Begin KP-Version Section
Const AppManID = "3.4.415.1.1"
Const KSVerID = "3.4"
'Comment = This version is released with Version 3.4 of AppManager (Author Paul Curtis)
'Log:
'%KSVerID=1.0, %Date=12/21/1999, %Time=15:02:08, %User= W2KDEV\adm_user  (sa), %TZ=GMT 
'	Addition of SSI Specific Functions (Author Paul Curtis)
'### End KP-Version Section

'### Begin KP-Status Section
'NeedKPW = 1
'AdminOnly = 0
'DisplayToolBar = 1
'IAmDiscovery = 0
'IAmAction = 0
'Description = Monitors the Number of Jobs on a Managed Client. If the number of jobs exceeds the threshold an event is raised.

'### End KP-Status Section

'### Begin KPC Section
'Parameters = 0 128 0 8 1 0 0 2147483647 0 99991231 0 235959

'### End KPC Section

'### Begin Type Section
Const SQLT_Server  = ""
'### End Type Section

'### Begin KPP Section

' [V<CPReady. Monitors the Number of Jobs on a Managed Client. If the number of jobs exceeds the threshold an event is raised. (Version 3.4)>V]
' [A<When number of jobs exceeds threshold, the selected action is taken.>A]
Const DO_EVENTALL = "y" 	'[M<Event For Number of Jobs per Machine? (y/n)>M][T<string,1,' ',yn">T]
Const DO_EVENTONE = "y" 	'[M<Event For Number of Jobs Single Event? (y/n)>M][T<string,1,' ',yn">T]
Const DO_EVENT = "y" 		'[M<Event For Number of Jobs ? (y/n)>M][T<string,1,' ',yn">T]
Const DO_DATA = "y" 		'[M<Collect Data? (y/n)>M][T<string,1,' ',yn">T]
Const DO_NUMBERS = "y" 		'[M<Show Numbers on Event Message? (y/n)>M][T<string,1,' ',yn">T]
Const JOB_THRESH = 1 		'[M<Threshold for Number of Jobs >M][T<integer,1,' ',1,100,Jobs>T]

Const DBNAME = "QDB"		'[M<MS Repository Name (Default QDB).>M] [T<String,1000,' ',>T]
Const Severity = 5 			'[M<Event Severity - Jobs Number>M][T<integer,1,' ',1,40,SevLevel>T]
Const Sev_Normal = 40 		'[M<Event Severity - Normal>M][T<integer,1,' ',1,40,SevLevel>T]
Const DEBUG  = "y"   		'[M<Write Debug File? (y/n)>M] [T<String,1, ,"yn">T]
Const AKPID = "AKP_NULL" 	'[M<Action taken>M]

'### End KPP Section

'### Begin KPS Section
Option Base 1
Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) As Long
Dim SQL As Object
Dim Server As Object
Dim DO_DEBUG As String
Dim Openfilefail As Boolean
Dim eventfired As Boolean

Type jobs 
	jobid As String
	KPName As String
	jobcnt As Integer
	MachineObjId As Integer	
	MachineName As String
End Type
Dim jobarray() As jobs

Type machines
	MachineObjId As Integer	
	MachineName As String
	EventMessage As String
	jobcount As Integer
	sendtevent As Boolean
End Type	


'Used to create Debug Directory, if it does not exist.
'This is a seperate function so that "On Error Resume Next" can be used for just this code.
Function createdebugdir() As Integer
	On Error Resume Next

	Dim dirname As String 
	dirname = "c:\NetIQ_KSdebug\"

	MkDir dirname
	If Err <> 0 Then
		createdebugdir = Err
	Else
		createdebugdir = 0
	End If

End Function


Function AlterString(ByRef sString As String, ByRef sCharToReplace As String, ByRef sCharToReplaceWith As String) As String

    Dim nLen As Long
    Dim sTemp As String
    Dim sTemp1 As String
    Dim I As Long
    
    nLen = Len(sString)
    
    For I = 1 To nLen
        sTemp = Mid(sString, I, 1)
        If sTemp = sCharToReplace Then
            sTemp = sCharToReplaceWith
        End If
        sTemp1 = sTemp1 + sTemp
    Next I
    AlterString = sTemp1
    
End Function

Dim Machinenamestr As String

Sub Main()
	'On Error GoTo main_error
	Dim resname$
	resname = "SQLT_Server = " & SQLT_Server
 	Dim longm As String
	Dim DetailMsg As String
	Dim machineres As String

   	Dim legend$
	Dim eventmsg As String
	Dim I As Long
	Dim numdb As Long
	Dim passwd$
	Dim free As Double
	Dim util As Double
	Dim freeErrorCode As Long
	Dim freeErrorMsg As String
	Dim utilErrorCode As Long
	Dim utilErrorMsg As String
	Dim Shortmsg As String
	Dim datastring As String
 	Dim AgtMsg As String
	Dim strErrorMsg As String
	Dim ErrorCode As Long
  	Dim CurConn As Long
	Dim CurrentCount As Long
	Dim MaxConn As Integer
	Dim AvailLock As Integer
	Dim FileErrNum As Integer
	Dim sqlcmd As String
	Dim JobInfo As String
	Set SQL = CreateObject("NetiQAgent.SQL")
	Set Server = SQL.Server
	If iterationcount() =1 Then
    	Dim NameSize As Long
	    Dim X As Long
		Dim Machinename1 As String
		Dim y As Integer
    	MachineName1 = Space$(16)
	    NameSize = Len(MachineName1)
    	X = GetComputerName(Machinename1,NameSize)
		For y = 1 To Len(Machinename1)
			If ASC(Mid(Machinename1,y,1)) <> 0 Then
				Machinenamestr = Machinenamestr + Mid(Machinename1,y,1)
			End If
		Next y
		Machinenamestr = lcase(trim(Machinenamestr))

	 	If DO_DATA = "y" Then
 			'DataHeader "Number of Jobs ^^#", 0, 1
		End If

	End If

	'This gives the ability to change whether Debugging should occur or not, As it is not possible to change the state of 
	'DEBUG as it is defined as a constant.
	DO_DEBUG = DEBUG
	Dim createret As Integer
	If iterationcount() = 1 Then
		eventfired= false
		Openfilefail = false
	End If
	If DO_DEBUG  = "y" Then
		If iterationcount() =1 Then
			createret = createdebugdir	'Use Function to Create Directory if its not already there
		End If
		KSName=	"AMADMIN_SSIAgtJobCount" & str(getjobid())
		If FileExists("c:\NetIQ_KSdebug\" & KSName & ".txt") Then

			If filelen("c:\NetIQ_KSdebug\" & KSName & ".txt") > 512000 Then

				If FileExists("c:\NetIQ_KSdebug\" & KSName & ".old") Then
					kill "c:\NetIQ_KSdebug\" & KSName & ".old"
				End If

				Name "c:\NetIQ_KSdebug\" & KSName & ".txt" As "c:\NetIQ_KSdebug\" & KSName & ".old"

			End If
		End If
		'Open Debug File
		Open "c:\NetIQ_KSdebug\" & KSName & ".txt" For Append Access Write As #2
		If Openfilefail = true And DO_DEBUG = DEBUG Then 
			eventmsg = Machinenamestr & " " &  "DEBUG NORMAL NULL"
			longm = "Opened debug file " &  chr$(10) 
			longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
			MSActions 40,eventmsg , AKPID, resname, longm
			Openfilefail = false  
			Print #2 , Now() & "        " & "*********Restart Debugging*********"
		End If

	End If

	Set SQL = CreateObject("NetiQAgent.SQL")
	Set Server = SQL.Lock	
	passwd = GetSqlPassword("", "sa")

	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Getting Jobs counts"
	End If

'select DISTINCT str(j.jobid) + CHAR(44) ,j.KPName + CHAR(44),str(jo.jobcount) + CHAR(44),str(j.machineobjid) + CHAR(44),o.name 
'from QDB..job j,QDB..object o,(Select "jobcount"= count(jobid),machineobjid from QDB..job where machineobjid = machineobjid and Status&0x08000000=0 AND Status&0xFF = 1 
'group by machineobjid) jo 
'where jo.machineobjid = j.machineobjid and j.Status&0x08000000=0 
'And j.Status&0xFF = 1 And jo.jobcount > 1 and o.objid = j.machineobjid 


	sqlcmd ="select DISTINCT str(j.jobid) + CHAR(44) ,j.KPName + CHAR(44),str(jo.jobcount) + CHAR(44),str(j.machineobjid) + CHAR(44),o.name from " & trim(DBNAME) & "..job j," & trim(DBNAME) & "..object o,"
	sqlcmd = sqlcmd & "(Select " & Chr(34) & "jobcount" & Chr(34) & "= count(jobid),machineobjid from " & trim(DBNAME) & "..job "
	sqlcmd = sqlcmd & "where machineobjid = machineobjid and Status&0x08000000=0 AND Status&0xFF = 1 and parentjobid is not null "
	sqlcmd = sqlcmd & "group by machineobjid) jo where jo.machineobjid = j.machineobjid and j.Status&0x08000000=0 "
	sqlcmd = sqlcmd & "And j.Status&0xFF = 1 And jo.jobcount > " & JOB_THRESH & " and o.objid = j.machineobjid and j.parentjobid is not null"

	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "SQL Command"
		Print #2 , Now() & "        " & sqlcmd
	End If


	CurrentCount = SQL.RunSqlValue("sa", passwd, True, sqlcmd, 0, "y", 0, "", AgtMsg, ErrorCode, strErrorMsg, Legend)

	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Number of Jobs 			= " &  CurrentCount
	End If
	If ErrorCode < 0 Then
		eventmsg = "JOB-COUNT ERROR NULL"
		MSActions Severity, eventmsg, AKPID, resname, strErrorMsg
		If DO_DEBUG  = "y" Then
			Print #2 , Now() & "        " & eventmsg
			Print #2 , Now() & "        " & strErrorMsg
			Close #2
		End If
		mcabort resname,strErrorMsg
	End If

	If DO_DEBUG  = "y" Then														  
		Print #2 , Now() & "        " & "Agent Message"		
		For x = 1 To linecount(agtmsg)
			Print #2 , Now() & "        " & line$(AgtMsg,x)
		Next x
		Print #2 , Now() & "        " & "Checking jobs"
	End If


	If CurrentCount > 0 Then
		ReDim jobarray(CurrentCount)
		NumJobs = 0
		JobInfo = "The Following Jobs have been found in the respository" & chr$(10)
		JobInfo = JobInfo & "that have errored when running" & chr$(10)
		JobInfo = JobInfo & "Machine Name    Job ID  Script Name                      Submit Date/Time" & chr$(10)
		For JobCount1 = 0 To (linecount(AgtMsg) -2)
				If JobCount1 > 1 Then
					If DO_DEBUG  = "y" Then				
						Print #2 , Now() & "        " &	"Job Count = " & JobCount1
						Print #2 , Now() & "        " &	trim(Item$(line$(AgtMsg,JobCount1+1), 1 ,, ","))
						Print #2 , Now() & "        " &	trim(Item$(line$(AgtMsg,JobCount1+1), 2 ,, ","))
						Print #2 , Now() & "        " & cint(Item$(line$(AgtMsg,JobCount1+1), 3 ,, ","))
						Print #2 , Now() & "        " & cint(Item$(line$(AgtMsg,JobCount1+1), 4 ,, ","))
						Print #2 , Now() & "        " & trim(Item$(line$(AgtMsg,JobCount1+1), 5 ,, ","))
					End If
					jobarray(JobCount1 - 1).jobid = trim(Item$(line$(AgtMsg,JobCount1+1), 1 ,, ","))
					jobarray(JobCount1 - 1).KPName = trim(Item$(line$(AgtMsg,JobCount1+1), 2 ,, ","))
					jobarray(JobCount1 - 1).jobcnt = cint(Item$(line$(AgtMsg,JobCount1+1), 3 ,, ","))
					jobarray(JobCount1 - 1).MachineObjId = cint(Item$(line$(AgtMsg,JobCount1+1), 4 ,, ","))
					jobarray(JobCount1 - 1).MachineName = trim(Item$(line$(AgtMsg,JobCount1+1), 5 ,, ","))
				End If
		Next JobCount1


		If DO_DEBUG  = "y" Then				
			Print #2 , Now() & "        " &	"job Array"
			For jobcount = 1 To ubound(jobarray)
				Print #2 , Now() & "        " &	"Array Element " & jobcount
				Print #2 , Now() & "        " &	jobarray(JobCount).jobid 
				Print #2 , Now() & "        " &	jobarray(JobCount).KPName
				Print #2 , Now() & "        " & jobarray(JobCount).jobcnt
				Print #2 , Now() & "        " & jobarray(JobCount).MachineObjId
				Print #2 , Now() & "        " & jobarray(JobCount).MachineName
			Next jobcount
		End If

'Process machine info
		Dim machinearray() As machines

		For jobcount = 1 To ubound(jobarray)
				found = false
				If arraydims(machinearray()) <> 0 Then
					For machinecount = 1 To ubound(machinearray())
						If jobarray(JobCount).MachineObjId = machinearray(machinecount).MachineObjId Then
							found = true												
							machinearray(machinecount).MachineObjId = jobarray(JobCount).MachineObjId
							machinearray(machinecount).MachineName = jobarray(JobCount).MachineName
							machinearray(machinecount).EventMessage = machinearray(machinecount).EventMessage & jobarray(JobCount).jobid & "	    " & jobarray(JobCount).KPName & "	        " & jobarray(JobCount).MachineName & chr$(10)
							machinearray(machinecount).jobcount = machinearray(machinecount).jobcount + 1
							machinearray(machinecount).sendtevent = false
						End If
					Next machinecount

					If found = false Then
						ReDim Preserve machinearray(ubound(machinearray())+1)
						machinecount = ubound(machinearray())
						machinearray(machinecount).MachineObjId = jobarray(JobCount).MachineObjId
						machinearray(machinecount).MachineName = jobarray(JobCount).MachineName
						machinearray(machinecount).EventMessage = jobarray(JobCount).jobid & "	    " & jobarray(JobCount).KPName & chr$(10)
						machinearray(machinecount).jobcount = 1
						machinearray(machinecount).sendtevent = false
					End If
				Else
					ReDim machinearray(1) As machines
					machinearray(1).MachineObjId = jobarray(JobCount).MachineObjId
					machinearray(1).MachineName = jobarray(JobCount).MachineName
					machinearray(1).EventMessage =  jobarray(JobCount).jobid & "	    " & jobarray(JobCount).KPName & "	        " & jobarray(JobCount).MachineName & "	        " & jobarray(JobCount).MachineName & chr$(10)
					machinearray(1).jobcount = 1
					machinearray(1).sendtevent = false
				End If
		Next jobcount
			

		If DO_DEBUG  = "y" Then				
			Print #2 , Now() & "        " &	"Machine Array"
			For machinecount = 1 To ubound(machinearray)
				Print #2 , Now() & "        " &	"Array Element " & machinecount
				Print #2 , Now() & "        " &	machinearray(machinecount).MachineObjId 
				Print #2 , Now() & "        " &	machinearray(machinecount).MachineName 
				Print #2 , Now() & "        " & machinearray(machinecount).EventMessage
				Print #2 , Now() & "        " & machinearray(machinecount).sendtevent
			Next machinecount
		End If


		If DO_EVENTALL = "y" Then
			If DO_DEBUG  = "y" Then
				Print #2 , Now() & "        " & "cycling through 1 to " & ubound(machinearray)
			End If
			For machinecount = 1 To ubound(machinearray)
				If DO_DEBUG  = "y" Then
					Print #2 , Now() & "        " & "Eventing for machine " & machinearray(machinecount).MachineName
				End If
				EventMsg = machinearray(machinecount).MachineName & " JOBS-TOTAL EXCEEDED "
				If DO_NUMBERS = "y"	Then
					EventMsg = EventMsg & str(machinearray(machinecount).jobcount) 
				Else
					EventMsg = EventMsg & "NULL"
				End If
				If DO_DEBUG  = "y" Then
					Print #2 , Now() & "        " & "Sent Event for machine " & machinearray(machinecount).MachineName
				End If
				detailmsg = "jobID 	    KPName" & chr$(10) & machinearray(machinecount).EventMessage
				machineres = "NT_MachineFolder = " & machinearray(machinecount).MachineName
				MSActions Severity, eventmsg, AKPID, machineres, detailmsg
				machinearray(machinecount).sendtevent = true
			Next machinecount
		End If
	

		If DO_EVENTONE = "y" Then
			If DO_DEBUG  = "y" Then
				Print #2 , Now() & "        " & "cycling through 1 to " & ubound(machinearray)
			End If
			jobtotal = 0
			detailMsg = "jobID 	    KPName			MachineName" & chr$(10) 
			For machinecount = 1 To ubound(machinearray)
				If DO_NUMBERS = "y"	Then
					jobtotal = jobtotal + machinearray(machinecount).jobcount 
				End If
				detailMsg = detailMsg & machinearray(machinecount).EventMessage & chr$(10) 
				machinearray(machinecount).sendtevent = true
			Next machinecount
			EventMsg = Machinenamestr & " JOBS-TOTAL EXCEEDED "
			If DO_NUMBERS = "y"	Then
				EventMsg = EventMsg + str(jobtotal)
			Else
				EventMsg = EventMsg + "NULL"
			End If
			machineres = "NT_MachineFolder = " & machinearray(machinecount).MachineName
			MSActions Severity, eventmsg, AKPID, machineres, Detailmsg
		End If
				
	End If
If DO_DEBUG  = "y" Then
	Print #2 , Now() & "        " & "Finished Checking Jobs's"
	Close #2
End If

Exit Sub

GoTo main_exit

main_error:

Select Case Err.Number
Case 52 To 76
	DO_DEBUG = "n"
	eventmsg = Machinenamestr & " " &  "DEBUG ERROR NULL"
	longm = "Unable to open debug file " &  chr$(10) 
	longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
	longm = longm & "This may be due to file being open." & chr$(10)
	longm = longm & "Debugging will be stopped for this script," & chr$(10)
	longm = longm & "Until problem Is fixed."
	MSActions 1,eventmsg , AKPID, resname, longm
	Openfilefail = true
	Resume Next 
Case Else
	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Error has occured, exiting script"
		Print #2 , Now() & "        " & Err.description
		Close #2
	End If
	mcabort resname,str(Err.Number)& " " & Err.description
End Select


main_exit:

End Sub

'### End KPS Section


