'### This is an .ebs file generated by KSCheckout.
'### It can be checked in to the repository by invoking kscheckin.
'###
'### AMAdmin_SSIErroredJobs

'$Revision: 2 $

'### Begin KP-Version Section
Const AppManID = "3.4.415.1.1"
Const KSVerID = "3.4"
'Comment = This version is released with Version 3.4 of AppManager (Author Paul Curtis)
'Log:
'%KSVerID=1.0, %Date=12/21/1999, %Time=15:02:08, %User= W2KDEV\adm_user  (sa), %TZ=GMT 
'	Addition of SSI Specific Functions (Author Paul Curtis)
'### End KP-Version Section

'### Begin KP-Status Section
'NeedKPW = 1
'AdminOnly = 0
'DisplayToolBar = 1
'IAmDiscovery = 0
'IAmAction = 0
'Description = Monitors the Jobs on a Management server. If one or more of the jobs has errored an event is raised.

'### End KP-Status Section

'### Begin KPC Section
'Parameters = 0 128 0 8 1 0 0 2147483647 0 99991231 0 235959

'### End KPC Section

'### Begin Type Section
Const SQLT_Server  = ""
'### End Type Section

'### Begin KPP Section

' [V<CPReady. Monitors the Jobs on a server. If one or more of the Jobs has stopped due to a Script Error an event is raised. (Version 3.4)>V]
' [A<When one or more jobs has Errored, the selected action is taken.>A]
Const DO_EVENT = "y" 		'[M<Event For Jobs that have not run? (y/n)>M][T<string,1,' ',yn">T]
Const DO_DATA = "y" 		'[M<Collect Data? (y/n)>M][T<string,1,' ',yn">T]
Const DO_NUMBERS = "y" 		'[M<Show Numbers on Event Message? (y/n)>M][T<string,1,' ',yn">T]
Const SEND_NORMAL = "y"		'[M<Send Mesage When back to no errored jobs(AutoClear Message) ? (y/n)>M] [T<String,1,,"yn">T]
Const DBNAME = "QDB"		'[M<MS Repository Name (Default QDB).>M] [T<String,1000,' ',>T]
Const Severity = 5 			'[M<Event Severity - Jobs Errored>M][T<integer,1,' ',1,40,SevLevel>T]
Const Sev_Normal = 40 		'[M<Event Severity - Normal>M][T<integer,1,' ',1,40,SevLevel>T]
Const DEBUG  = "y"   		'[M<Write Debug File? (y/n)>M] [T<String,1, ,"yn">T]
Const AKPID = "AKP_NULL" 	'[M<Action taken>M]

'### End KPP Section

'### Begin KPS Section
Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) As Long
Dim SQL As Object
Dim Server As Object
Dim DO_DEBUG As String
Dim Openfilefail As Boolean
Dim eventfired As Boolean


'Used to create Debug Directory, if it does not exist.
'This is a seperate function so that "On Error Resume Next" can be used for just this code.
Function createdebugdir() As Integer
	On Error Resume Next

	Dim dirname As String 
	dirname = "c:\NetIQ_KSdebug\"

	MkDir dirname
	If Err <> 0 Then
		createdebugdir = Err
	Else
		createdebugdir = 0
	End If

End Function


Function AlterString(ByRef sString As String, ByRef sCharToReplace As String, ByRef sCharToReplaceWith As String) As String

    Dim nLen As Long
    Dim sTemp As String
    Dim sTemp1 As String
    Dim I As Long
    
    nLen = Len(sString)
    
    For I = 1 To nLen
        sTemp = Mid(sString, I, 1)
        If sTemp = sCharToReplace Then
            sTemp = sCharToReplaceWith
        End If
        sTemp1 = sTemp1 + sTemp
    Next I
    AlterString = sTemp1
    
End Function

Dim Machinenamestr As String

Sub Main()
	On Error GoTo main_error
	Dim resname$
	resname = "SQLT_Server = " & SQLT_Server
 	Dim longm As String
	Dim DetailMsg As String

   	Dim legend$
	Dim eventmsg As String
	Dim I As Long
	Dim numdb As Long
	Dim passwd$
	Dim free As Double
	Dim util As Double
	Dim freeErrorCode As Long
	Dim freeErrorMsg As String
	Dim utilErrorCode As Long
	Dim utilErrorMsg As String
	Dim Shortmsg As String
	Dim datastring As String
 	Dim AgtMsg As String
	Dim strErrorMsg As String
	Dim ErrorCode As Long
  	Dim CurConn As Long
	Dim CurrentCount As Long
	Dim MaxConn As Integer
	Dim AvailLock As Integer
	Dim FileErrNum As Integer
	Dim sqlcmd As String
	Dim JobInfo As String
	Set SQL = CreateObject("NetiQAgent.SQL")
	Set Server = SQL.Server
	If iterationcount() =1 Then
    	Dim NameSize As Long
	    Dim X As Long
		Dim Machinename1 As String
		Dim y As Integer
    	MachineName1 = Space$(16)
	    NameSize = Len(MachineName1)
    	X = GetComputerName(Machinename1,NameSize)
		For y = 1 To Len(Machinename1)
			If ASC(Mid(Machinename1,y,1)) <> 0 Then
				Machinenamestr = Machinenamestr + Mid(Machinename1,y,1)
			End If
		Next y
		Machinenamestr = lcase(trim(Machinenamestr))

	 	If DO_DATA = "y" Then
 			DataHeader "Errored Jobs ^^#", 0, 1
		End If

	End If

	'This gives the ability to change whether Debugging should occur or not, As it is not possible to change the state of 
	'DEBUG as it is defined as a constant.
	DO_DEBUG = DEBUG
	If iterationcount() = 1 Then
		eventfired= false
		Openfilefail = false
	End If
	If DO_DEBUG  = "y" Then
		If iterationcount() =1 Then
			createret = createdebugdir	'Use Function to Create Directory if its not already there
		End If
		KSName=	"AMAdmin_SSIErroredJobs" & str(getjobid())
		If FileExists("c:\NetIQ_KSdebug\" & KSName & ".txt") Then

			If filelen("c:\NetIQ_KSdebug\" & KSName & ".txt") > 512000 Then

				If FileExists("c:\NetIQ_KSdebug\" & KSName & ".old") Then
					kill "c:\NetIQ_KSdebug\" & KSName & ".old"
				End If

				Name "c:\NetIQ_KSdebug\" & KSName & ".txt" As "c:\NetIQ_KSdebug\" & KSName & ".old"

			End If
		End If
		'Open Debug File
		Open "c:\NetIQ_KSdebug\" & KSName & ".txt" For Append Access Write As #2
		If Openfilefail = true And DO_DEBUG = DEBUG Then 
			eventmsg = Machinenamestr & " " &  "DEBUG NORMAL NULL"
			longm = "Opened debug file " &  chr$(10) 
			longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
			MSActions 40,eventmsg , AKPID, resname, longm
			Openfilefail = false  
			Print #2 , Now() & "        " & "*********Restart Debugging*********"
		End If

	End If

	Set SQL = CreateObject("NetiQAgent.SQL")
	Set Server = SQL.Lock	
	passwd = GetSqlPassword("", "sa")


	sqlcmd = "SELECT o.name + CHAR(44), str(j.Jobid) + CHAR(44),j.KPNAME + CHAR(44),dateadd(ss,j.SubmitTime,'1/1/1970 12:00am')" 
	sqlcmd = sqlcmd & " FROM " & trim(DBNAME) & "..Job j," & trim(DBNAME) & "..object o WHERE j.Status&0x08000000=0 AND j.Status&0xFF = 128 and o.RootMachineObjID = o.Objid and o.RootMachineObjID = j.MachineObjID"


	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Getting Errored Jobs"
		Print #2 , Now() & "        " & "SQL Cmd"
		Print #2 , Now() & "        " & sqlcmd
	End If

	CurrentCount = SQL.RunSqlValue("sa", passwd, True, sqlcmd, 0, "y", 0, "", AgtMsg, ErrorCode, strErrorMsg, Legend)

	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Number of Jobs 			= " &  CurrentCount
	End If
	If ErrorCode < 0 Then
		eventmsg = "TASK-STATUS ERROR NULL"
		MSActions Severity, eventmsg, AKPID, resname, strErrorMsg
		If DO_DEBUG  = "y" Then
			Print #2 , Now() & "        " & eventmsg
			Print #2 , Now() & "        " & strErrorMsg
			Close #2
		End If
		mcabort resname,strErrorMsg
	End If

	If DO_DEBUG  = "y" Then														  
		Print #2 , Now() & "        " & "Checking Creating detail message for jobs that have errored"
	End If


	If CurrentCount > 0 Then
		NumJobs = 0
		JobInfo = "The Following Jobs have been found in the respository" & chr$(10)
		JobInfo = JobInfo & "that have errored when running" & chr$(10)
		JobInfo = JobInfo & "Machine Name    Job ID  Script Name                      Submit Date/Time" & chr$(10)
		For JobCount = 0 To (linecount(AgtMsg) -2)
				If JobCount > 1 Then
					If DO_DEBUG  = "y" Then				
						Print #2 , Now() & "        " &	"TaskCount = " & JobCount
						Print #2 , Now() & "        " &	trim(Item$(line$(AgtMsg,JobCount+1), 1 ,, ","))
						Print #2 , Now() & "        " &	str(Item$(line$(AgtMsg,JobCount+1), 2 ,, ","))
						Print #2 , Now() & "        " & trim(Item$(line$(AgtMsg,JobCount+1), 3 ,, ","))
						Print #2 , Now() & "        " & trim(Item$(line$(AgtMsg,JobCount+1), 4 ,, ","))
					End If
					MachineName = trim(Item$(line$(AgtMsg,JobCount+1), 1 ,, ","))
					Jobid = str(Item$(line$(AgtMsg,JobCount+1), 2 ,, ","))
					KPName = trim(Item$(line$(AgtMsg,JobCount+1), 3 ,, ","))
					SubmitTime = trim(Item$(line$(AgtMsg,JobCount+1), 4 ,, ","))
					JobInfo = JobInfo & MachineName & "	" & jobid & "	" & KPName & "	" & SubmitTime & chr$(10)
					NumJobs =NumJobs + 1
				End If
		Next JobCount
		If DO_DEBUG  = "y" Then				
			Print #2 , Now() & "        " &	"Finished Reading Jobs"
		End If
		If DO_EVENT= "y" Then
			If DO_DEBUG  = "y" Then				
				Print #2 , Now() & "        " &	"Do Eventing"
			End If

			If DO_NUMBERS= "y" Then
				eventmsg = Machinenamestr & " " &  "JOBS ERRORED " & str(NumJobs)
			Else
				eventmsg = Machinenamestr & " " &  "JOBS ERRORED NULL"
			End If
			MSActions Severity, eventmsg, AKPID, resname, JobInfo
			eventfired = true
		End If

		If DO_DATA = "y" Then
			datalog 1, NumJobs,JobInfo
		End If
	Else
		If DO_EVENT= "y" And eventfired = true Then
			eventfired = false
			detailmsg = "All Jobs that were in the respository that " & chr$(10)
			detailmsg = detailmsg & "had ended due To an Error, have been removed" 
			eventmsg = " JOBS NORMAL NULL"
			If SEND_NORMAL = "y" Then
				If DO_DEBUG  = "y" Then
					Print #2 , Now() & "        " & "Sending Normal Message"
				End If
		 		MSActions Sev_Normal, Machinenamestr & eventmsg , AKPID, resname, detailmsg
			Else
				If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
					If DO_DEBUG  = "y" Then
						Print #2 , Now() & "        " & "Sending Normal Message, as Action is Command Post"
					End If
			 		MSActions sev_Normal,  Machinenamestr & eventmsg, AKPID, resname, detailmsg
				End If
			End If
		End If
	End If
	


If DO_DEBUG  = "y" Then
	Print #2 , Now() & "        " & "Finished Checking Jobs's"
	Close #2
End If

Exit Sub

GoTo main_exit

main_error:

Select Case Err.Number
Case 52 To 76
	DO_DEBUG = "n"
	eventmsg = Machinenamestr & " " &  "DEBUG ERROR NULL"
	longm = "Unable to open debug file " &  chr$(10) 
	longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
	longm = longm & "This may be due to file being open." & chr$(10)
	longm = longm & "Debugging will be stopped for this script," & chr$(10)
	longm = longm & "Until problem Is fixed."
	MSActions 1,eventmsg , AKPID, resname, longm
	Openfilefail = true
	Resume Next 
Case Else
	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Error has occured, exiting script"
		Print #2 , Now() & "        " & Err.description
		Close #2
	End If
	mcabort resname,str(Err.Number)& " " & Err.description
End Select


main_exit:

End Sub

'### End KPS Section


