'### This is an .ebs file generated by KSCheckout.
'### It can be checked in to the repository by invoking kscheckin.
'###
'### NT_SSIMemUtil
'### 
'###

'### Begin KP-Status Section
'NeedKPW = 0
'AdminOnly = 0
'DisplayToolBar = 1
'IAmDiscovery = 0
'IAmAction = 0
'Description = Monitor utilization of physical memory, virtual memory, and paging files

'### End KP-Status Section

'### Begin KPC Section
'Parameters = 0 128 0 4 5 1 1 2147483647 0 99991231 0 235959

'### End KPC Section

'### Begin Type Section
Const NT_PagingFileFolder = ""
Const NT_PhysicalMemObj = ""
Const NT_VirtualMemObj = ""
'### End Type Section

'### Begin KPP Section

'### Author 		: NetIQ
'### Version		: 1.0
'### Description	: Monitors Physical Memory, Virtual Memory and Pagefile utilization

'### Changed by		: Dayanand Sankar (713) 245-1556 (Property of Shell Services International)
'### Date			: 5/26/97
'### Revision       : 1.0
'### Enhancements 	: -Change to accomodate 'n' consecutive times of occurrences for all 
'###				   (Physical memory, Virtual memory, Page file) the thersholds.
'###				  -Initial Clear message and Clear message after a threshold has been 
'###				   reached and then falling below that threshold 'n' consecutive times.
'###				  -Also event messages are formatted to represent 
'###				   Counter, Value and Number with only spaces seperating these three entities.
'###

' [V<CPReady. Physical Memory Used measures physical memory usage%. Virtual Memory Used measures virtual memory usage%. Paging File Used measures paging file usage%. If ANY threshold is exceeded, an event is raised. (Version 1.0)>V]
' [A<When the memory usage is detected over the threshold, the selected action is taken.>A]
Const DO_EVENT = "y" '[M<Event? (y/n)>M][T<string,1,' ',yn">T]
Const DO_DATA = "n" '[M<Collect Data? (y/n)>M][T<string,1,' ',yn">T]
Const DO_NUMBERS = "y" '[M<Show numbers? (y/n)>M][T<string,1,' ',yn">T]
Const TH_PHYS = 90 '[M<Physical Memory Used % > >M][T<integer,1,' ',0,100,%>T]
Const TH_PHCONSEC = 3 '[M<Consecutive times Physical Memory usage exeeds above thershold>M][T<integer,1,' ',0,100,>T]
Const TH_VIRTUAL = 90 '[M<Virtual Memory Used % > >M][T<integer,1,' ',0,100,%>T]
Const TH_VRCONSEC = 3 '[M<Consecutive times Virtual Memory usage exeeds above thershold>M][T<integer,1,' ',0,100,>T]
Const TH_PAGING = 90 '[M<Paging File Used % > >M][T<integer,1,' ',0,100,%>T]
Const TH_PGCONSEC = 3 '[M<Consecutive times Paging File usage exeeds above thershold>M][T<integer,1,' ',0,100,>T]
Const Sev_PHYS = 5 '[M<Event Severity for Physical Memory Used>M][T<integer,1,' ',1,40,SevLevel>T]
Const Sev_VIRTUAL = 5 '[M<Event Severity for Virtual Memory Used>M][T<integer,1,' ',1,40,SevLevel>T]
Const Sev_PAGING = 5 '[M<Event Severity for Paging Files Used>M][T<integer,1,' ',1,40,SevLevel>T]
Const AKPID = "AKP_NULL" ' [M<Action Taken>M]

'### End KPP Section

'### Begin KPS Section
Dim NT As Object
Dim OBJ As Object
Const UNITPERCENT = "^^%"
Dim nPhCount As Integer
Dim nPhClearCount As Integer
Dim nVrCount As Integer
Dim nVrClearCount As Integer
Dim nPgCount As Integer
Dim nPgClearCount As Integer
Dim bPhDone As Boolean
Dim bPhClearDone As Boolean
Dim bVrDone As Boolean
Dim bVrClearDone As Boolean
Dim bPgDone As Boolean
Dim bPgClearDone As Boolean
Dim nPhClearCnt As Integer
Dim nVrClearCnt As Integer
Dim nPgClearCnt As Integer


Sub Main()
	Dim Dval0#, Dval1#, Dval2#
	Dim longm$

	Set NT = CreateObject("NetiQAgent.NT")
	Set OBJ = NT.Memory

	If DO_DATA = "y" And IterationCount() = 1 Then
		If NT_PhysicalMemObj <> "" Then
			DataHeader "MemPhysUsage" & UNITPERCENT, 0, 0
		End If
		If NT_VirtualMemObj <> "" Then
			DataHeader "MemVirtualUsage" & UNITPERCENT, 0, 1
		End If
		If NT_PagingFileFolder <> "" Then
			DataHeader "MemPGFileUsage" & UNITPERCENT, 0, 2
		End If
	End If


 '************************
 '	Physical memory
 '************************


	If NT_PhysicalMemObj <> "" Then
		Dval0 = OBJ.PhysUsageValue(TRUE)
		If Dval0 = -1 Then
			Err.Description = "Failed on PhyMem MO"
			Err.raise 4107
		End If
		If DO_EVENT = "y" And Dval0 > TH_PHYS Then
			nPhCount = nPhCount + 1
			bPhClearDone = -1
			If nPhClearCount <> 0 And nPhClearCount < TH_PHCONSEC Then
				nPhClearCount = 0
			End If
			If nPhClearCnt <> 0 And nPhClearCnt < TH_PHCONSEC Then
				nPhClearCnt = 0
			End If
			If nPhCount = TH_PHCONSEC Then
				longm = "Physical Memory Usage% is " & Format$(Dval0, "0.00") & "; >TH = " & Cstr(TH_PHYS)
				If DO_NUMBERS = "y" Then
					MSActions Sev_PHYS, "Physical-Memory Usage-High " & Format$(Dval0, "0.00"), AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
				Else
					MSActions Sev_PHYS, "Physical-Memory Usage-High " & "NULL", AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
				End If				
				bPhDone = -1
				nPhClearCnt = 0
				nPhClearCount = 0
			End If
		ElseIf DO_EVENT = "y" And Dval0 < TH_PHYS Then
			nPhClearCount = nPhClearCount + 1
			nPhClearCnt = nPhClearCnt + 1
			If nPhCount <> 0 And nPhCount < TH_PHCONSEC Then
				nPhCount = 0
			End If
			longm = "Physical Memory Usage% is " & Format$(Dval0, "0.00") & "; <TH = " & Cstr(TH_PHYS)
			If nPhClearCount = TH_PHCONSEC And bPhDone <> -1 And bPhClearDone <> -1 Then
				If DO_NUMBERS = "y" Then
					MSActions 40, "Physical-Memory Usage-Normal " & Format$(Dval0, "0.00"), AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
				Else
					MSActions 40, "Physical-Memory Usage-Normal " & "NULL", AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
				End If
				nPhCount = 0
				bPhClearDone = -1
				nPhClearCount = 0
				bPhDone = 0
			End If
			If nPhClearCnt = TH_PHCONSEC And bPhDone = -1 Then
				If DO_NUMBERS = "y" Then
					MSActions 40, "Physical-Memory Usage-Normal " & Format$(Dval0, "0.00"), AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
				Else
					MSActions 40, "Physical-Memory Usage-Normal " & "NULL", AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
				End If
				nPhCount = 0
				bPhClearDone = -1
				nPhClearCount = 0
				bPhDone = 0
			End If
		End If
 	End If
 
 
 '************************
 '	Virtual memory
 '************************
 
 	If NT_VirtualMemObj <> "" Then
		Dval1 = OBJ.VirtualUsageValue(TRUE)
		If Dval1 = -1 Then
			Err.Description = "Failed on VirtualMem MO"
			Err.raise 4108
		End If
		If DO_EVENT = "y" And Dval1 > TH_VIRTUAL Then
			nVrCount = nVrCount + 1
			bVrClearDone = -1
			If nVrClearCount <> 0 And nVrClearCount < TH_VRCONSEC Then
				nVrClearCount = 0
			End If
			If nVrClearCnt <> 0 And nVrClearCnt < TH_VRCONSEC Then
				nVrClearCnt = 0
			End If
			If nVrCount = TH_VRCONSEC Then
				longm = "Virtual Memory Usage% is " & Format$(Dval1, "0.00") & "; >TH = " & Cstr(TH_VIRTUAL)
				If DO_NUMBERS = "y" Then
					MSActions Sev_VIRTUAL, "Virtual-Memory Usage-High " & Format$(Dval1, "0.00"), AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj, longm 
				Else
					MSActions Sev_VIRTUAL, "Virtual-Memory Usage-High " & "NULL", AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj, longm
				End If				
				bVrDone = -1
				nVrClearCnt = 0
				nVrClearCount = 0
			End If
		ElseIf DO_EVENT = "y" And	Dval1 < TH_VIRTUAL Then
			longm = "Virtual Memory Usage% is " & Format$(Dval1, "0.00") & "; <TH = " & Cstr(TH_VIRTUAL)
			nVrClearCount = nVrClearCount + 1
			nVrClearCnt = nVrClearCnt + 1			
			If nVrCount <> 0 And nVrCount < TH_VRCONSEC Then
				nVrCount = 0
			End If
			If nVrClearCount = TH_VRCONSEC And bVrDone <> -1 And bVrClearDone <> -1 Then			
				If DO_NUMBERS = "y" Then
					MSActions 40, "Virtual-Memory Usage-Normal " & Format$(Dval1, "0.00"), AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj, longm 
				Else
					MSActions 40, "Virtual-Memory Usage-Normal " & "NULL", AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj, longm 
				End If
				nVrCount = 0
				bVrClearDone = -1
				nVrClearCount = 0
				bVrDone = 0
			End If
			If nVrClearCnt = TH_VRCONSEC And bVrDone = -1 Then
				If DO_NUMBERS = "y" Then
					MSActions 40, "Virtual-Memory Usage-Normal " & Format$(Dval1, "0.00"), AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj, longm 
				Else
					MSActions 40, "Virtual-Memory Usage-Normal " & "NULL", AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj, longm 
				End If
				bVrDone = 0
				nVrCount = 0
	 			nVrClearCnt = 0
				bVrClearDone = -1
			End If			
		End If
 	End If


 '************************
 '	Paging File
 '************************

	If NT_PagingFileFolder <> "" Then
		Dval2 = OBJ.PGFileUsageValue(TRUE)
		If Dval2 = -1 Then
			Err.Description = "Failed on PagingFile MO"
			Err.raise 4109
		End If
		If DO_EVENT = "y" And Dval2 > TH_PAGING Then
			nPgCount = nPgCount + 1
			bPgClearDone = -1
			If nPgClearCount <> 0 And nPgClearCount < TH_PGCONSEC Then
				nPgClearCount = 0
			End If
			If nPgClearCnt <> 0 And nPgClearCnt < TH_PGCONSEC Then
				nPgClearCnt = 0
			End If
			If nPgCount = TH_PGCONSEC Then			
				longm = "Paging File Usage% is " & Format$(Dval2, "0.00") & "; >TH = " & Cstr(TH_PAGING)
				If DO_NUMBERS = "y" Then				
					MSActions Sev_PAGING, "Paging-File Usage-High " & Format$(Dval2, "0.00"), AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 
				Else
					MSActions Sev_PAGING, "Paging-File Usage-High " & "NULL", AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 
				End If
				bPgDone = -1
				nPgClearCnt = 0
				nPgClearCount = 0
			End If
		ElseIf DO_EVENT = "y" And Dval2 < TH_PAGING Then
			longm = "Paging File Usage% is " & Format$(Dval2, "0.00") & "; <TH = " & Cstr(TH_PAGING)
			nPgClearCount = nPgClearCount + 1
			nPgClearCnt = nPgClearCnt + 1
			If nPgCount <> 0 And nPgCount < TH_PGCONSEC Then
				nPgCount = 0
			End If
			If nPgClearCount = TH_PGCONSEC And bPgDone <> -1 And bPgClearDone <> -1 Then			
				If DO_NUMBERS = "y" Then				
					MSActions 40, "Paging-File Usage-Normal " & Format$(Dval2, "0.00"), AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 
				Else
					MSActions 40, "Paging-File Usage-Normal " & "NULL", AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 
				End If						
				bPgDone = 0
				nPgCount = 0
	 			nPgClearCnt = 0
				bPgClearDone = -1
			End If
			If nPgClearCnt = TH_PGCONSEC And bPgDone = -1 Then 
				If DO_NUMBERS = "y" Then				
					MSActions 40, "Paging-File Usage-Normal " & Format$(Dval2, "0.00"), AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 
				Else
					MSActions 40, "Paging-File Usage-Normal " & "NULL", AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 
				End If						
				bPgDone = 0
				nPgCount = 0
	 			nPgClearCnt = 0
				bPgClearDone = -1
			End If
		End If
 	End If

	' The reason Datalog are called together is to get the same timestamps
	If DO_DATA = "y" Then
		Dim Msg0$, Msg1$, Msg2$

		If NT_PhysicalMemObj <> "" Then
			Msg0 = OBJ.PhysUsageAgtMsg(TRUE)
		End If
		If NT_VirtualMemObj <> "" Then
			Msg1 = OBJ.VirtualUsageAgtMsg(TRUE)
		End If
		If NT_PagingFileFolder <> "" Then
			Msg2 = OBJ.PGFileUsageAgtMsg(TRUE)
		End If
		If NT_PhysicalMemObj <> "" Then
	        DataLog 0, Dval0, Msg0
		End If
		If NT_VirtualMemObj <> "" Then
	        DataLog 1, Dval1, Msg1
		End If
		If NT_PagingFileFolder <> "" Then
	        DataLog 2, Dval2, Msg2
		End If
	End If

End Sub


'### End KPS Section


