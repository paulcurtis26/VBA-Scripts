'### This is an .ebs file generated by KSCheckout.
'### It can be checked in to the repository by invoking kscheckin.
'###
'### NT_SSIMemUtil
'### 
'###

'$Revision: 2 $

'### Begin KP-Version Section
Const AppManID = "3.4.415.1.1"
Const KSVerID = "3.4"
'Comment = This version is released with Version 3.4 of AppManager (Author Paul Curtis)
'Log:
'%KSVerID=1.0, %Date=12/21/1999, %Time=15:02:08, %User= W2KDEV\adm_user  (sa), %TZ=GMT 
'	Addition of SSI Specific Functions (Author Paul Curtis)
'### End KP-Version Section

'### Begin KP-Status Section
'NeedKPW = 0
'AdminOnly = 0
'DisplayToolBar = 1
'IAmDiscovery = 0
'IAmAction = 0
'Description = Monitor utilization of physical memory, virtual memory, and paging files

'### End KP-Status Section

'### Begin KPC Section
'Parameters = 0 128 0 4 5 1 1 2147483647 0 99991231 0 235959

'### End KPC Section

'### Begin Type Section
Const NT_PagingFileFolder = ""
Const NT_PhysicalMemObj = ""
Const NT_VirtualMemObj = ""
'### End Type Section

'### Begin KPP Section
' [V<CPReady (Ver 3.0). Physical Memory Used measures physical memory usage%. Virtual Memory Used measures virtual memory usage%. Paging File Used measures paging file usage%. If ANY threshold is exceeded, an event is raised. (Version 3.4)>V]
' [A<When the memory usage is detected over the threshold, the selected action is taken.>A]
Const DO_EVENT = "y" 	'[M<Event? (y/n)>M][T<string,1,' ',"yn">T]
Const DO_DATA = "n" 	'[M<Collect Data? (y/n)>M][T<string,1,' ',"yn">T]
Const DO_NUMBERS = "y" 	'[M<Show numbers? (y/n)>M][T<string,1,' ',"yn">T]
Const TH_PHYS = 90 		'[M<Physical Memory Used % > >M][T<integer,1,' ',0,100,%>T]
Const TH_PHCONSEC = 3 	'[M<Consecutive times Physical Memory usage exeeds above thershold>M][T<integer,1,' ',0,100,Times>T]
Const TH_VIRTUAL = 90 	'[M<Virtual Memory Used % > >M][T<integer,1,' ',0,100,%>T]
Const TH_VRCONSEC = 3 	'[M<Consecutive times Virtual Memory usage exeeds above thershold>M][T<integer,1,' ',0,100,Times>T]
Const TH_PAGING = 90 	'[M<Paging File Used % > >M][T<integer,1,' ',0,100,%>T]
Const TH_PGCONSEC = 3 	'[M<Consecutive times Paging File usage exeeds above thershold>M][T<integer,1,' ',0,100,Times>T]
Const Sev_PHYS = 5 		'[M<Event Severity for Physical Memory Used>M][T<integer,1,' ',1,40,SevLevel>T]
Const Sev_VIRTUAL = 5 	'[M<Event Severity for Virtual Memory Used>M][T<integer,1,' ',1,40,SevLevel>T]
Const Sev_PAGING = 5 	'[M<Event Severity for Paging Files Used>M][T<integer,1,' ',1,40,SevLevel>T]
Const SEND_NORMAL = "y"	'[M<Send Mesage When Disk Space is Normal (AutoClear Message) ? (y/n)>M] [T<String,1,,"yn">T]
Const DEBUG = "n"	'[M< Write Debug Information to File ? (y/n)>M] [T<String,1,,"yn">T]
Const AKPID = "AKP_NULL"'[M<Action Taken>M]

'### End KPP Section

'### Begin KPS Section

Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) As Long

'Used to create Debug Directory, if it does not exist.
'This is a seperate function so that "On Error Resume Next" can be used for just this code.
Function createdebugdir() As Integer
	On Error Resume Next

	Dim dirname As String 
	dirname = "c:\NetIQ_KSdebug\"

	MkDir dirname
	If Err <> 0 Then
		createdebugdir = Err
	Else
		createdebugdir = 0
	End If

End Function

Dim DO_DEBUG As String
Dim Openfilefail As Boolean

Dim NT As Object
Dim OBJ As Object
Dim OBJ1 As Object
Const UNITPERCENT = "^^%"
Dim nPhCount As Integer
Dim nPhClearCount As Integer
Dim nVrCount As Integer
Dim nVrClearCount As Integer
Dim nPgCount As Integer
Dim nPgClearCount As Integer
Dim bPhDone As Boolean
Dim bPhClearDone As Boolean
Dim bVrDone As Boolean
Dim bVrClearDone As Boolean
Dim bPgDone As Boolean
Dim bPgClearDone As Boolean
Dim nPhClearCnt As Integer
Dim nVrClearCnt As Integer
Dim nPgClearCnt As Integer
Dim Machinenamestr As String

Sub Main()
	'On Error GoTo main_error
	If Iterationcount() =1 Then	
		Openfilefail = false
	End If

	Dim Dval0#, Dval1#, Dval2#
	Dim AgntMsg As String
	Dim longm$
	Dim ShortMsg As String

    Dim NameSize As Long
    Dim X As Long
	Dim Machinename1 As String
	Dim y As Integer
	Dim KSName As String
	If IterationCount() = 1 Then
	    MachineName1 = Space$(16)
	    NameSize = Len(MachineName1)
	    X = GetComputerName(Machinename1,NameSize)
		For y = 1 To Len(Machinename1)
			If ASC(Mid(Machinename1,y,1)) <> 0 Then
				Machinenamestr = Machinenamestr + Mid(Machinename1,y,1)
			End If
		Next y
		Machinenamestr = lcase(trim(Machinenamestr))
		bPhClearDone = true
		bVRClearDone = true
		bPgClearDone = true
		If DO_DEBUG = "y" Then
			Print #2, now() & "       " &  "Machine Name : " & Machinenamestr
		End If
	End If	

	DO_DEBUG = DEBUG
	If DO_DEBUG  = "y" Then
		If iterationcount() =1 Then
			createret = createdebugdir	'Use Function to Create Directory if its not already there
		End If
		KSName=	"NT_SSIMemUtil" & str(getjobid())
		If FileExists("c:\NetIQ_KSdebug\" & KSName & ".txt") Then

			If filelen("c:\NetIQ_KSdebug\" & KSName & ".txt") > 512000 Then

				If FileExists("c:\NetIQ_KSdebug\" & KSName & ".old") Then
					kill "c:\NetIQ_KSdebug\" & KSName & ".old"
				End If

				Name "c:\NetIQ_KSdebug\" & KSName & ".txt" As "c:\NetIQ_KSdebug\" & KSName & ".old"

			End If
		End If
		'Open Debug File
		Open "c:\NetIQ_KSdebug\" & KSName & ".txt" For Append Access Write As #2
		If Openfilefail = true And DO_DEBUG = DEBUG Then 
			eventmsg = Machinenamestr & " " &  "DEBUG NORMAL NULL"
			longm = "Openned debug file " &  chr$(10) 
			longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
			MSActions 40,eventmsg , AKPID, "NT_MachineFolder = " & Machinenamestr, longm
			Openfilefail = false
			Print #2 , Now() & "        " & "*********Restart Debugging*********"
		End If
	End If

	Set NT = CreateObject("NetiQAgent.NT")
	Set OBJ = NT.Memory
	Set OBJ1 = NT.System

	If DO_DATA = "y" And IterationCount() = 1 Then
		If NT_PhysicalMemObj <> "" Then
			DataHeader "MemPhysUsage" & UNITPERCENT, 0, 0
		End If
		If NT_VirtualMemObj <> "" Then
			DataHeader "MemVirtualUsage" & UNITPERCENT, 0, 1
		End If
		If NT_PagingFileFolder <> "" Then
			DataHeader "MemPGFileUsage" & UNITPERCENT, 0, 2
		End If
	End If


 '************************
 '	Physical memory
 '************************


	If NT_PhysicalMemObj <> "" Then
		Dval0 = OBJ.PhysUsageValue(TRUE)
		If DO_DEBUG = "y" Then
			Print #2, now() & "       " &  " Counter Value for NT_PhysicalMemObj = " & Dval0
		End If

		If Dval0 = -1 Then
			Err.Description = "Failed on PhyMem MO"
			Err.raise 4107
		End If
		If DO_EVENT = "y" And Dval0 > TH_PHYS Then
			If DO_DEBUG = "y" Then
				Print #2, now() & "       " &  " Counter Value for NT_PhysicalMemObj Exceeded Threshold " 
			End If
			nPhCount = nPhCount + 1
			If nPhCount = TH_PHCONSEC Then
				If DO_DEBUG = "y" Then
					Print #2, now() & "       " &  " Counter Value for NT_PhysicalMemObj Exceeded Threshold " & nPhCount & " Time(s)"
				End If
				longm = "Physical Memory Usage% is " & Format$(Dval0, "0.00") & "; >TH = " & Cstr(TH_PHYS)
				If DO_NUMBERS = "y" Then
					ShortMsg = MachineNamestr & " Physical-Memory EXCEEDED " & Format$(Dval0, "0.00")
				Else
					ShortMsg = MachineNamestr & " Physical-Memory EXCEEDED NULL"
				End If				
				MSActions Sev_PHYS, ShortMsg, AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
				nPhClearCount = 0
				bPhClearDone = false
				nPhCount = 0
			End If
		ElseIf DO_EVENT = "y" And Dval0 < TH_PHYS Then
			If DO_DEBUG = "y" Then
				Print #2, now() & "       " &  " Counter Value for NT_PhysicalMemObj Under Threshold " 
			End If
			nPhClearCount = nPhClearCount + 1
			longm = "Physical Memory Usage% is " & Format$(Dval0, "0.00") & "; <TH = " & Cstr(TH_PHYS)
			If nPhClearCount = TH_PHCONSEC And bPhClearDone = false Then
				If DO_DEBUG = "y" Then
					Print #2, now() & "       " &  " Counter Value for NT_PhysicalMemObj Under Threshold " & nPhClearCount & " Time(s)"
				End If

				If DO_NUMBERS = "y" Then
					ShortMsg = MachineNamestr & " Physical-Memory NORMAL " & Format$(Dval0, "0.00")	
				Else
					ShortMsg = MachineNamestr & " Physical-Memory NORMAL NULL"
				End If				

				If SEND_NORMAL = "y" Then
					If DO_DEBUG = "y" Then
						Print #2, now() & "       " &  " Send Normal for NT_PhysicalMemObj "
					End If
					MSActions 40, ShortMsg, AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
				Else
					If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
						If DO_DEBUG = "y" Then
							Print #2, now() & "       " &  " Send Normal for NT_PhysicalMemObj anyway as Action is command post"
						End If
						MSActions 40, ShortMsg, AKPID, "NT_PhysicalMemObj = " + NT_PhysicalMemObj, longm 
					End If
				End If
				nPhCount = 0
				bPhClearDone = True
				nPhClearCount = 0
			End If
		End If
 	End If
 
 
 '************************
 '	Virtual memory
 '************************
 
 	If NT_VirtualMemObj <> "" Then
		Dval1 = OBJ.VirtualUsageValue(TRUE)
		If DO_DEBUG = "y" Then
			Print #2, now() & "       " &  " Counter Value for NT_VirtualMemObj = " & Dval1
		End If

		If Dval1 = -1 Then
			Err.Description = "Failed on VirtualMem MO"
			Err.raise 4108
		End If
		If DO_EVENT = "y" And Dval1 > TH_VIRTUAL Then
			If DO_DEBUG = "y" Then
				Print #2, now() & "       " &  " Counter Value for NT_VirtualMemObj Exceeded Threshold " 
			End If
			nVrCount = nVrCount + 1
			If nVrCount = TH_VRCONSEC Then
				If DO_DEBUG = "y" Then
					Print #2, now() & "       " &  " Counter Value for NT_VirtualMemObj Exceeded Threshold " & nVRCount & " Time(s)"
				End If
				longm = "Virtual Memory Usage% is " & Format$(Dval1, "0.00") & "; >TH = " & Cstr(TH_VIRTUAL)
				If DO_NUMBERS = "y" Then
					ShortMsg = MachineNamestr & " Virtual-Memory EXCEEDED " & Format$(Dval1, "0.00")
				Else
					ShortMsg = MachineNamestr & " Virtual-Memory EXCEEDED NULL"
				End If				
 				MSActions Sev_VIRTUAL, ShortMsg, AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj, longm 
				bVrClearDone = false
				nVrClearCount = 0
				nVrCount = 0
			End If
		ElseIf DO_EVENT = "y" And	Dval1 < TH_VIRTUAL Then
			nVrClearCount = nVrClearCount + 1
			If DO_DEBUG = "y" Then
				Print #2, now() & "       " &  " Counter Value for NT_VirtualMemObj Under Threshold "
			End If
			longm = "Virtual Memory Usage% is " & Format$(Dval1, "0.00") & "; <TH = " & Cstr(TH_VIRTUAL)
			If nVrClearCount = TH_VRCONSEC And bVrClearDone = false Then
				If DO_DEBUG = "y" Then
					Print #2, now() & "       " &  " Counter Value for NT_VirtualMemObj Under Threshold " & nVrClearCount & " Time(s)"
				End If
			
				If DO_NUMBERS = "y" Then
					ShortMsg = MachineNamestr & " Virtual-Memory NORMAL " & Format$(Dval1, "0.00")
				Else
					ShortMsg = MachineNamestr & " Virtual-Memory NORMAL NULL"
				End If				
				If SEND_NORMAL = "y" Then
					If DO_DEBUG = "y" Then
						Print #2, now() & "       " &  " Send Normal for NT_VirtualMemObj "
					End If

					MSActions 40, ShortMsg, AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj , longm 
				Else
					If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
						If DO_DEBUG = "y" Then
							Print #2, now() & "       " &  " Send Normal for NT_VirtualMemObj anyway as Action is command post"
						End If
						MSActions 40, ShortMsg, AKPID, "NT_VirtualMemObj = " + NT_VirtualMemObj , longm 
					End If
				End If
				nVrCount = 0
				bVrClearDone = True
				nVrClearCount = 0
			End If
		End If
 	End If


 '************************
 '	Paging File
 '************************

	If NT_PagingFileFolder <> "" Then
		Dval2 = OBJ1.CounterValue("Paging File", "% Usage","_Total")
		If DO_DEBUG = "y" Then
			Print #2, now() & "       " &  " Counter Value for NT_PagingFileFolder = " & Dval2
		End If

		If Dval2 = -1 Then
			Err.Description = "Failed on PagingFile MO"
			Err.raise 4109
		End If
		If DO_EVENT = "y" And Dval2 > TH_PAGING Then
			nPgCount = nPgCount + 1
			If DO_DEBUG = "y" Then
				Print #2, now() & "       " &  " Counter Value for NT_PagingFileFolder Exceeded Threshold " 
			End If
			If nPgCount = TH_PGCONSEC Then			
				If DO_DEBUG = "y" Then
					Print #2, now() & "       " &  " Counter Value for NT_PagingFileFolder Exceeded Threshold " & nPgCount & " Time(s)"
				End If
				longm = "Paging File Usage% is " & Format$(Dval2, "0.00") & "; >TH = " & Cstr(TH_PAGING) & Chr(10)
				If DO_NUMBERS = "y" Then
					ShortMsg = MachineNamestr & " Paging-File EXCEEDED " & Format$(Dval2, "0.00")
				Else
					ShortMsg = MachineNamestr & " Paging-File EXCEEDED NULL"
				End If				

				MSActions Sev_PAGING, ShortMsg, AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 

				bPgClearDone = false
				nPgCount = 0
				nPgClearCount = 0
			End If
		ElseIf DO_EVENT = "y" And Dval2 < TH_PAGING Then
			nPgClearCount = nPgClearCount + 1
			If DO_DEBUG = "y" Then
				Print #2, now() & "       " &  " Counter Value for NT_PagingFileFolder Under Threshold "
			End If
			longm = "Paging File Usage% is " & Format$(Dval2, "0.00") & "; <TH = " & Cstr(TH_PAGING) & Chr(10)
			If nPgClearCount = TH_PGCONSEC And  bPgClearDone = false Then	
				If DO_DEBUG = "y" Then
					Print #2, now() & "       " &  " Counter Value for NT_PagingFileFolder Under Threshold " & nPgClearCount & " Time(s)"
				End If
		
				If DO_NUMBERS = "y" Then
					ShortMsg = MachineNamestr & " Paging-File NORMAL " & Format$(Dval2, "0.00")
				Else
					ShortMsg = MachineNamestr & " Paging-File NORMAL NULL"
				End If				
	
				If SEND_NORMAL = "y" Then
					If DO_DEBUG = "y" Then
						Print #2, now() & "       " &  " Send Normal for NT_VirtualMemObj "
					End If

					MSActions 40, ShortMsg, AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 
				Else
					If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
						If DO_DEBUG = "y" Then
							Print #2, now() & "       " &  " Send Normal for NT_VirtualMemObj anyway as Action is command post"
						End If
						MSActions 40, ShortMsg, AKPID, "NT_PagingFileFolder = " + NT_PagingFileFolder, longm 
					End If
				End If
				nPgCount = 0
				bPgClearDone = True
	 			nPgClearCount = 0
			End If
		End If
 	End If

	' The reason Datalog are called together is to get the same timestamps
	If DO_DATA = "y" Then
		Dim Msg0$, Msg1$, Msg2$

		If NT_PhysicalMemObj <> "" Then
			Msg0 = OBJ.PhysUsageAgtMsg(TRUE)
		End If
		If NT_VirtualMemObj <> "" Then
			Msg1 = OBJ.VirtualUsageAgtMsg(TRUE)
		End If
		If NT_PagingFileFolder <> "" Then
			Msg2 = OBJ.PGFileUsageAgtMsg(TRUE)
			Msg2 = "Paging File Usage% is " & Format$(Dval2, "0.00")
		End If
		If NT_PhysicalMemObj <> "" Then
	        DataLog 0, Dval0, Msg0
		End If
		If NT_VirtualMemObj <> "" Then
	        DataLog 1, Dval1, Msg1
		End If
		If NT_PagingFileFolder <> "" Then
	        DataLog 2, Dval2, Msg2
		End If
	End If

If nVrClearCount > 100 Then
	nVrClearCount = 10
End If
If nPhClearCount > 100 Then
	nPhClearCount = 10
End If
If nPgClearCount > 100 Then
	nPgClearCount = 10
End If

If DO_DEBUG  = "y" Then
	Print #2 , Now() & "        " & "Finished Checking Mem Utilisation"
	Close #2
End If
GoTo main_exit

main_error:

Select Case Err.Number
Case 52 To 76
	DO_DEBUG = "n"
	eventmsg = Machinenamestr & " " &  "DEBUG ERROR NULL"
	longm = "Unable to open debug file " &  chr$(10) 
	longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
	longm = longm & "This may be due to file being open." & chr$(10)
	longm = longm & "Debugging will be stopped for this script," & chr$(10)
	longm = longm & "Until problem Is fixed."
	MSActions 1,eventmsg , AKPID, "NT_MachineFolder = " & Machinenamestr, longm
	Openfilefail = true
	Resume Next 
Case Else
	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Error has occured, exiting script"
		Print #2 , Now() & "        " & Err.description
		Close #2
	End If
	mcabort "NT_MachineFolder = " & Machinenamestr,str(Err.Number)& " " & Err.description
End Select

main_exit:

End Sub


'### End KPS Section


