'### 
'### AD_SSINTDSDirReadsData.ks
'###

'$Revision: 2 $

'### Begin KP-Version Section
Const AppManID = "3.4.415.1.2"
Const KSVerID = "3.4"
'Comment = This version is released with Version 3.4 of AppManager (Author Paul Curtis)
'Log:
'%KSVerID=1.0, %Date=12/21/1999, %Time=15:02:08, %User= W2KDEV\adm_user  (sa), %TZ=GMT 
'	Addition of SSI Specific Functions (Author Paul Curtis)
'### End KP-Version Section

'### Begin KP-Status Section
'NeedKPW = 0				' NeedKPW bit is 0
'AdminOnly = 0				' AdminOnly bit is 0
'DisplayToolBar = 1			' DisplayToolBar bit is 1
'Description = Collects data on NTDS Directory Reads
'### End KP-Status Section

'### Begin KPC Section
'KPC = ThirtyM
'### End KPC Section

'### Begin Type Section
Const NT_MachineFolder = ""
'### End Type Section

'### Begin KPP Section
'[V<CPReady.Script to Collects data on NTDS Directory Reads (Version 3.4).>V]
Const DEBUG  = "n"   	'[M<Write Debug File? (y/n)>M] [T<String,1, ,"yn">T]
'[A<This script is for data collection only so actions have no effect.>A]
Const AKPID = "AKP_NULL"	' [M<Action taken>M]
'### End KPP Section

'### Begin KPS Section
Const DO_EVENT = "n"	
Const DO_DATA = "y"		
Const DO_NUMBERS = "n" 	
Const THRESHOLD1 = 10	
Const SEND_NORMAL = "n"	
Const CONSEC_TIME = 1	
Const Sev_Exceeded = 5	
Const Sev_Normal = 40 	
Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) As Long
Dim NT As Object
Dim OBJ As Object
Dim Machinenamestr As String
Dim DO_DEBUG As String
Dim Openfilefail As Boolean
Dim KSName As String
Dim resname As String
Dim eventmsg As String
Dim longm As String
'These store the info about each Counter to be monitored
'THe value here should equal the amount of times the function GetCounterValue
'is called from the main() Routine
Dim ConTimesOver(2) As Integer	  
Dim ConTimesUnder(2) As Integer
Dim EventFired(2) As Boolean

'Used to create Debug Directory, if it does not exist.
'This is a seperate function so that "On Error Resume Next" can be used for just this code.
Function createdebugdir() As Integer
	On Error Resume Next

	Dim dirname As String 
	dirname = "c:\NetIQ_KSdebug\"

	MkDir dirname
	If Err <> 0 Then
		createdebugdir = Err
	Else
		createdebugdir = 0
	End If

End Function

Function AlterString(sString As String, sCharToReplace As String, sCharToReplaceWith As String) As String

    Dim nLen As Long
    Dim sTemp As String
    Dim sTemp1 As String
    Dim I As Long
    
    nLen = Len(sString)
    
    For I = 1 To nLen
        sTemp = Mid(sString, I, 1)
        If sTemp = sCharToReplace Then
            sTemp = sCharToReplaceWith
        End If
        sTemp1 = sTemp1 + sTemp
    Next I
    AlterString = sTemp1
    
End Function
	
Sub GetCounterValue(ObjectName As String, CounterName As String, InstanceName As String, nDataID As Integer, TH_OVER As Integer)
	On Error GoTo GetCounterValue_error
	Dim dval As Double
	Set NT = CreateObject("NetiQAgent.NT")
	Set OBJ = NT.System

	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Checking Counter : " & ObjectName & "\" & CounterName & "\" & InstanceName
	End If

	dval = OBJ.CounterValue(ObjectName, CounterName, InstanceName)

	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Permon Counter Returned " & dval
	End If

	resmsg = "NT_MachineFolder = " & NT_MachineFolder

	If dval = -1 Then
		If DO_DEBUG  = "y" Then
			Print #2 , Now() & "        " & "	Counter Failed to get Value"
		End If
		longmsg = "Can't get value of " & ObjectName & " " & CounterName & " " & InstanceName
		shortmsg = 	"Can't get value of " & CounterName
		MCAbort resmsg, shortmsg
	End If

	If DO_EVENT = "y" And dval > TH_OVER Then
		If DO_DEBUG  = "y" Then
			Print #2 , Now() & "        " & "	Values is over Threshold"
			Print #2 , Now() & "        " & "	Value 			: " & dval
			Print #2 , Now() & "        " & "	THRESHOLD 		: " & TH_OVER
			Print #2 , Now() & "        " & "	FAILCOUNT 		: " & ConTimesOver(nDataID)
			Print #2 , Now() & "        " & "	CONSEC_TIMES	: " & CONSEC_TIME
		End If
		ConTimesOver(nDataID) = ConTimesOver(nDataID) + 1
		ConTimesUnder(nDataID)=0
		If ConTimesOver(nDataID) = CONSEC_TIME Then
			If DO_DEBUG  = "y" Then
				Print #2 , Now() & "        " & "	FAILCOUNT = CONSEC_TIMES"
				Print #2 , Now() & "        " & "	Fire Exceeded Event"
			End If
			longmsg = "Counter value for " & ObjectName & "-" & CounterName & "-" & InstanceName & " is " & _
				CStr(dval) & "; >TH = " & Cstr(TH_OVER)
			If DO_NUMBERS = "y" Then
				ShortMsg = MachineNamestr & " " & AlterString(CounterName," ","-") & " EXCEEDED " & format(dval,"0.00")
			Else
				ShortMsg = MachineNamestr & " " & AlterString(CounterName," ","-") & " EXCEEDED NULL"
			End If
			MSActions Sev_Exceeded, shortmsg, AKPID, resmsg, longmsg
			ConTimesOver(nDataID) = 0 
			EventFired(nDataID) = true
		End If
	End If


	If DO_EVENT = "y" And dval < TH_OVER Then
		If DO_DEBUG  = "y" Then
			Print #2 , Now() & "        " & "	Values is Under Threshold"
			Print #2 , Now() & "        " & "	Value 			: " & dval
			Print #2 , Now() & "        " & "	THRESHOLD 		: " & TH_OVER
			Print #2 , Now() & "        " & "	FAILCOUNT 		: " & ConTimesUnder(nDataID)
			Print #2 , Now() & "        " & "	CONSEC_TIMES	: " & CONSEC_TIME
		End If

		ConTimesUnder(nDataID) = ConTimesUnder(nDataID) + 1
		'Stops Var overflowing if continually alright
		If ConTimesUnder(nDataID) = 100 Then
			ConTimesUnder(nDataID) = 99
		End If
		ConTimesOver(nDataID) = 0 
		If ConTimesUnder(nDataID) = CONSEC_TIME And EventFired(nDataID) = True Then
			If DO_DEBUG  = "y" Then
				Print #2 , Now() & "        " & "	SUCCESSCOUNT = CONSEC_TIMES"
			End If

			longmsg = "Counter value for " & ObjectName & "-" & CounterName & "-" & InstanceName & " is " & _
				CStr(dval) & "; <TH = " & Cstr(TH_OVER)
			If DO_NUMBERS = "y" Then
				ShortMsg = MachineNamestr & " " & AlterString(CounterName," ","-") & " NORMAL " & format(dval,"0.00")
			Else
				ShortMsg = MachineNamestr & " " & AlterString(CounterName," ","-") & " NORMAL NULL"
			End If
			If SEND_NORMAL = "y" Then
				If DO_DEBUG  = "y" Then
					Print #2 , Now() & "        " & "	Send Normal Message"
				End If
				MSActions Sev_Normal, shortmsg, AKPID, resmsg, longmsg
			Else
				If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
					If DO_DEBUG  = "y" Then
						Print #2 , Now() & "        " & "	Send Normal Message, as Action is Command Post"
					End If
					MSActions Sev_Normal, shortmsg, AKPID, resmsg, longmsg
				End If
			End If
			ConTimesUnder(nDataID) = 0 
			EventFired(nDataID) = false
		End If
	End If

	' Check threshold, and do action

	' Do graphing
	If DO_DATA = "y" Then
		If DO_DEBUG  = "y" Then
			Print #2 , Now() & "        " & "	Write Data Log"
		End If

		If IterationCount() = 1 Then
			DataHeader OBJ.CounterLegend(ObjectName, CounterName, InstanceName) , 0, nDataID
		End If
		DataLog nDataID, dval, ""
	End If

GoTo GetCounterValue_exit

GetCounterValue_error:

Select Case Err.Number
Case 52 To 76
	DO_DEBUG = "n"
	eventmsg = Machinenamestr & " " &  "DEBUG ERROR NULL"
	longm = "Unable to open debug file " &  chr$(10) 
	longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
	longm = longm & "This may be due to file being open." & chr$(10)
	longm = longm & "Debugging will be stopped for this script," & chr$(10)
	longm = longm & "Until problem Is fixed."
	MSActions 1,eventmsg , AKPID, resname, longm
	Openfilefail = true
	Resume Next 
Case Else
	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Error has occured, exiting script"
		Print #2 , Now() & "        " & Err.description
		Close #2
	End If
	mcabort resname,str(Err.Number)& " " & Err.description
End Select

GetCounterValue_exit:

End Sub

Sub Main()
	On Error GoTo main_error
	If Iterationcount() =1 Then	
		Openfilefail = false
	End If
	resname = "NT_MachineFolder = " & NT_MachineFolder

	If iterationcount() = 1 Then
		Openfilefail = false
	    Dim NameSize As Long
    	Dim X As Long
		Dim Machinename1 As String
		Dim y As Integer
	    MachineName1 = Space$(16)
    	NameSize = Len(MachineName1)
	    X = GetComputerName(Machinename1,NameSize)
		For y = 1 To Len(Machinename1)
			If ASC(Mid(Machinename1,y,1)) <> 0 Then
				Machinenamestr = Machinenamestr + Mid(Machinename1,y,1)
			End If
		Next y
		Machinenamestr = lcase(trim(Machinenamestr))
	
	End If

	DO_DEBUG = DEBUG
	If DO_DEBUG  = "y" Then
		If iterationcount() =1 Then
			createret = createdebugdir	'Use Function to Create Directory if its not already there
		End If
		KSName=	"AD_SSINTDSDirReadsData" & str(getjobid())
		If FileExists("c:\NetIQ_KSdebug\" & KSName & ".txt") Then

			If filelen("c:\NetIQ_KSdebug\" & KSName & ".txt") > 512000 Then

				If FileExists("c:\NetIQ_KSdebug\" & KSName & ".old") Then
					kill "c:\NetIQ_KSdebug\" & KSName & ".old"
				End If

				Name "c:\NetIQ_KSdebug\" & KSName & ".txt" As "c:\NetIQ_KSdebug\" & KSName & ".old"

			End If
		End If
		'Open Debug File
		Open "c:\NetIQ_KSdebug\" & KSName & ".txt" For Append Access Write As #2
		If Openfilefail = true And DO_DEBUG = DEBUG Then 
			eventmsg = Machinenamestr & " " &  "DEBUG NORMAL NULL"
			longm = "Openned debug file " &  chr$(10) 
			longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
			MSActions 40,eventmsg , AKPID, resname, longm
			Openfilefail = false
			Print #2 , Now() & "        " & "*********Restart Debugging*********"
		End If
	End If
	
	'Create one row for each counter
	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Directory Reads"
	End If
	GetCounterValue "NTDS", "DS Directory Reads/sec", "", 0, THRESHOLD1

If DO_DEBUG  = "y" Then
	Print #2 , Now() & "        " & "Finished Checking Directory Reads"
	Close #2
End If
GoTo main_exit

main_error:

Select Case Err.Number
Case 52 To 76
	DO_DEBUG = "n"
	eventmsg = Machinenamestr & " " &  "DEBUG ERROR NULL"
	longm = "Unable to open debug file " &  chr$(10) 
	longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
	longm = longm & "This may be due to file being open." & chr$(10)
	longm = longm & "Debugging will be stopped for this script," & chr$(10)
	longm = longm & "Until problem Is fixed."
	MSActions 1,eventmsg , AKPID, resname, longm
	Openfilefail = true
	Resume Next 
Case Else
	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Error has occured, exiting script"
		Print #2 , Now() & "        " & Err.description
		Close #2
	End If
	mcabort resname,str(Err.Number)& " " & Err.description
End Select

main_exit:


End Sub

'### End KPS Section
