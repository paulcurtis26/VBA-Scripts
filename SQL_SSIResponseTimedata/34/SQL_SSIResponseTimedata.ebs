'### This is an .ebs file generated by KSCheckout.
'### It can be checked in to the repository by invoking kscheckin.
'###
'### SQL_SSIResponseTimeData.ebs

'$Revision: 2 $

'### Begin KP-Version Section
Const AppManID = "3.4.415.1.1"
Const KSVerID = "3.4"
'Comment = This version is released with Version 3.4 of AppManager (Author Paul Curtis)
'Log:
'%KSVerID=1.0, %Date=12/21/1999, %Time=15:02:08, %User= W2KDEV\adm_user  (sa), %TZ=GMT 
'	Addition of SSI Specific Functions (Author Paul Curtis)
'### End KP-Version Section

'### Begin KP-Status Section
'NeedKPW = 1
'AdminOnly = 0
'DisplayToolBar = 1
'IAmDiscovery = 0
'IAmAction = 0
'Description = Collects data on the Response Time from this server to others entered.

'### End KP-Status Section

'### Begin KPC Section
'Parameters = 0 128 0 8 1 0 0 2147483647 0 99991231 0 235959

'### End KPC Section

'### Begin Type Section
Const SQLT_Server  = ""
'### End Type Section

'### Begin KPP Section

' [V<CPReady. Collects data on the Response Time from this server to others entered.(Version 3.4)>V]
' [A<This script is for data collection only so actions have no effect.>A]
Const InfoSeverity = 10 	'[M<Event Severity Incorrect Info>M][T<integer,1,' ',1,39,SevLevel>T]
Const SQLSTR = "" 			'[M<SQL Statement to test Response For?>M] [T<String,255,,>T]
Const USERNAME = "sa"		'[M<User Name >M] [T<String,20,,>T]
Const PASSWORD = "" 		'[M<sa Password >M] [T<String,128,'^',>T] [I<I_EDIT(1)>I]
Const DEBUG  = "n"   		'[M<Write Debug File? (y/n)>M] [T<String,1, ,"yn">T]
Const AKPID = "AKP_NULL" 	'[M<Action taken>M]
'### End KPP Section

'### Begin KPS Section
Const DO_DATA = "y"
Const DO_EVENTTH = "n" 		'[M<Event For Threshold Checking? (y/n)>M][T<string,1,' ',"yn">T]
Const DO_EVENTDB = "n" 		'[M<Event For Response Time? (y/n)>M][T<string,1,' ',"yn">T]
Const DO_NUMBERS = "n" 		'[M<Show numbers? (y/n)>M][T<string,1,' ',"yn">T]
Const SEND_NORMAL = "n" 	'[M<Send Event when Response Time is Normal? (y/n)>M][T<string,1,' ',"yn">T]
Const TH_RESPOND = 4	 	'[M<Response Threshold > >M][T<integer,1,' ',0,9999,Seconds>T]
Const CONSEC_TIME = 1 		'[M<Consecutive times>M] [T<long,,,1, 999999, #>T]
Const Severity = 5 			'[M<Event Severity>M][T<integer,1,' ',1,39,SevLevel>T]
		
Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) As Long
Dim SQL As Object
Dim Server As Object
Dim DO_DEBUG As String
Dim Openfilefail As Boolean

Private FailCount As Integer
Private ClearCount As Integer
Private EventFired As Boolean

'Used to create Debug Directory, if it does not exist.
'This is a seperate function so that "On Error Resume Next" can be used for just this code.
Function createdebugdir() As Integer
	On Error Resume Next

	Dim dirname As String 
	dirname = "c:\NetIQ_KSdebug\"

	MkDir dirname
	If Err <> 0 Then
		createdebugdir = Err
	Else
		createdebugdir = 0
	End If

End Function


Function AlterString(ByRef sString As String, ByRef sCharToReplace As String, ByRef sCharToReplaceWith As String) As String

    Dim nLen As Long
    Dim sTemp As String
    Dim sTemp1 As String
    Dim I As Long
    
    nLen = Len(sString)
    
    For I = 1 To nLen
        sTemp = Mid(sString, I, 1)
        If sTemp = sCharToReplace Then
            sTemp = sCharToReplaceWith
        End If
        sTemp1 = sTemp1 + sTemp
    Next I
    AlterString = sTemp1
    
End Function

Dim Machinenamestr As String

Sub Main()
	On Error GoTo main_error
	Dim resname$	
	resname = "SQLT_Server = " & SQLT_Server
	
 	Dim longm As String
	Dim DetailMsg As String
   	Dim dbname$
   	Dim legend$
	Dim eventmsg As String
	Dim I As Long
	Dim numdb As Long
	Dim passwd$
	Dim free As Double
	Dim util As Double
	Dim freeErrorCode As Long
	Dim freeErrorMsg As String
	Dim utilErrorCode As Long
	Dim utilErrorMsg As String
	Dim Shortmsg As String
	Dim datastring As String
 	Dim AgtMsg As String
	Dim strErrorMsg As String
	Dim ErrorCode As Long
  	Dim CurLock As Double
	Dim MaxLock As Integer
	Dim AvailLock As Integer
	Dim FileErrNum As Integer

	Set SQL = CreateObject("NetiQAgent.SQL")
	Set Server = SQL.Server
	If iterationcount() =1 Then
    	Dim NameSize As Long
	    Dim X As Long
		Dim Machinename1 As String
		Dim y As Integer
    	MachineName1 = Space$(16)
	    NameSize = Len(MachineName1)
    	X = GetComputerName(Machinename1,NameSize)
		For y = 1 To Len(Machinename1)
			If ASC(Mid(Machinename1,y,1)) <> 0 Then
				Machinenamestr = Machinenamestr + Mid(Machinename1,y,1)
			End If
		Next y
		Machinenamestr = lcase(trim(Machinenamestr))
		EventFired= false
	End If

	'This gives the ability to change whether Debugging should occur or not, As it is not possible to change the state of 
	'DEBUG as it is defined as a constant.
	DO_DEBUG = DEBUG
	If iterationcount() = 1 Then
		Openfilefail = false
	End If
	If DO_DEBUG  = "y" Then
		If iterationcount() =1 Then
			createret = createdebugdir	'Use Function to Create Directory if its not already there
		End If
		KSName=	"SQL_SSIResponseTimeData" & str(getjobid())
		If FileExists("c:\NetIQ_KSdebug\" & KSName & ".txt") Then

			If filelen("c:\NetIQ_KSdebug\" & KSName & ".txt") > 512000 Then

				If FileExists("c:\NetIQ_KSdebug\" & KSName & ".old") Then
					kill "c:\NetIQ_KSdebug\" & KSName & ".old"
				End If

				Name "c:\NetIQ_KSdebug\" & KSName & ".txt" As "c:\NetIQ_KSdebug\" & KSName & ".old"

			End If
		End If
		'Open Debug File
		Open "c:\NetIQ_KSdebug\" & KSName & ".txt" For Append Access Write As #2
		If Openfilefail = true And DO_DEBUG = DEBUG Then 
			eventmsg = Machinenamestr & " " &  "DEBUG NORMAL NULL"
			longm = "Openned debug file " &  chr$(10) 
			longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
			MSActions 40,eventmsg , AKPID, resname, longm
			Openfilefail = false  
			Print #2 , Now() & "        " & "*********Restart Debugging*********"
		End If

	End If

	If USERNAME = "" Then
		eventmsg = Machinenamestr & " " &  "USERNAME ERROR NULL"
		longm = "Check UserName, a username must be supplied"
		MSActions InfoSeverity, eventmsg, AKPID, resname, longm		
	End If

	Set SQL = CreateObject("NetiQAgent.SQL")
	Set Server = SQL.Lock	

	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Runnimg SQL Command : " & SQLSTR
	End If

	StartTime = now()
	CurLock = SQL.RunSqlValue(USERNAME, PASSWORD, false,SQLSTR, 0, "y", 1, "", AgtMsg, ErrorCode, strErrorMsg, Legend)
	EndTime = now()

	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "RunSqlValue Error code: " & 		 ErrorCode
	End If


	If ErrorCode < 0 Then
		eventmsg = "SQL Statement Supplied incorrect, Response time invalid"
		MSActions Severity, eventmsg, AKPID, resname, strErrorMsg
		If DO_DEBUG  = "y" Then
			Print #2 , Now() & "        " & eventmsg
		End If
		GoTo continue
	End If

	RunTime = datediff("s",starttime,endtime)
		  
	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Run Time for Statement : " & Format$(RunTime, "0.00")
	End If

	If DO_EVENTDB = "y" Then
		eventmsg = RunTime & "Secs"
		Detailmsg = "Successfully-Ran-SQL" & chr$(10)
		Detailmsg = Detailmsg & "Start-Time " & StartTime & chr$(10)
		Detailmsg = Detailmsg & "End-Time " & EndTime & chr$(10)
		Detailmsg = Detailmsg & "Duration " & RunTime & " Seconds" & chr$(10)
		If DO_NUMBERS = "y" Then
			Shortmsg = Machinenamestr & " RESPONSE-TIME " & eventmsg
		Else
			Shortmsg = Machinenamestr & " RESPONSE-TIME NULL"
		End If
		MSActions 39, Shortmsg, AKPID, resname, Detailmsg
		eventmsg =""
	End If

	If DO_EVENTTH = "y" Then
		If DO_DEBUG  = "y" Then
			Print #2 , Now() & "        " & "Checking thresholds for RunTime"
		End If

		If RunTime > TH_RESPOND   Then
			eventmsg = RunTime & "Secs"
			If DO_DEBUG  = "y" Then
				Print #2 , Now() & "        " & "Response Time over threshold "
				Print #2 , Now() & "        " & "		Response Time : " & RunTime & " Seconds"
				Print #2 , Now() & "        " & "		Threshold set is " & TH_RESPOND & " Seconds"
			End If		
   			longm = "The Response Time is " & cstr(RunTime) & "Secs; >TH = " & CStr(TH_RESPOND) & " Secs " & chr$(10)
			FailCount = FailCount + 1
			ClearCount = 0 
			If FailCount = CONSEC_TIME Then
				If DO_DEBUG  = "y" Then
					Print #2 , Now() & "        " & "	Number of Consec times set is " & str(CONSEC_TIME)
					Print #2 , Now() & "        " & "	Number of times the response has been above the Threshold is " & str(FailCount)
					Print #2 , Now() & "        " & "	Firing Event as condition for Response Time has been met required number of times"										
				End If
				EventFired = true
				If DO_NUMBERS = "y" Then
					eventmsg = Machinenamestr & " RESPONSE-TIME EXCEEDED " & eventmsg
				Else
					eventmsg = Machinenamestr & " RESPONSE-TIME EXCEEDED NULL"
				End If
				MSActions Severity, eventmsg, AKPID, resname, longm
				eventmsg = ""
				FailCount = 0 
			End If
		ElseIf RunTime <= TH_RESPOND Then
			eventmsg = RunTime & "Secs"
			If DO_DEBUG  = "y" Then
				Print #2 , Now() & "        " & "Response Time under threshold "
				Print #2 , Now() & "        " & "		Response Time : " & RunTime & " Seconds"
				Print #2 , Now() & "        " & "		Threshold set is " & TH_RESPOND & " Seconds"
				Print #2 , Now() & "        " & "		Incrementing count for condition Alright"
			End If
   			longm = "The Response Time is " & cstr(RunTime) & "Secs; <TH = " & CStr(TH_RESPOND) & " Secs " & chr$(10)
			FailCount = 0
			ClearCount = ClearCount + 1
				If ClearCount = CONSEC_TIME And EventFired = true Then
				If DO_DEBUG  = "y" Then
					Print #2 , Now() & "        " & "		Number of Consec times set is " & str(CONSEC_TIME)
					Print #2 , Now() & "        " & "		Number of times the response has been above the Threshold is " & str(FailCount)
					Print #2 , Now() & "        " & "		Condition for Response Time has been met required number of times"										
					Print #2 , Now() & "        " & "			and an event has been sent to report that threshold has not been exeeded so run AutoClear section"										
				End If
					If DO_NUMBERS = "y" Then
					eventmsg = Machinenamestr & " RESPONSE-TIME NORMAL " & eventmsg
				Else
					eventmsg = Machinenamestr & " RESPONSE-TIME NORMAL NULL"
				End If
					If SEND_NORMAL = "y" Then
					If DO_DEBUG  = "y" Then
						Print #2 , Now() & "        " & "		user has set parameter to send Normal messages so send auto Clear"
					End If
					MSActions 40, eventmsg, AKPID, resname, longm
				Else
					If Mid(AKPID,instr(1,AKPID,"A"),17) = "ACTION_SSICmdPost" Then
						If DO_DEBUG  = "y" Then
							Print #2 , Now() & "        " & "		user has not set parameter to send Normal messages but as action"
							Print #2 , Now() & "        " & "		is a Command post action send Auto Clear anyway"
						End If
						MSActions 40, eventmsg, AKPID, resname, longm
					End If
				End If
				EventFired = false
				ClearCount = 0 
			End If
		End If
	End If
 	If DO_DATA = "y" Then
 		If IterationCount() = 1 Then
 			DataHeader "Response Time^^Sec", 0, 1
 		End If
 		datastring = "Response Time= " & RunTime & " Seconds" & chr$(10)
		DataLog 1, RunTime , datastring
 	End If
continue:
If DO_DEBUG  = "y" Then
	Print #2 , Now() & "        " & "Finished Checking Response Time"
	Close #2
End If
GoTo main_exit

main_error:

Select Case Err.Number
Case 52 To 76
	DO_DEBUG = "n"
	eventmsg = Machinenamestr & " " &  "DEBUG ERROR NULL"
	longm = "Unable to open debug file " &  chr$(10) 
	longm = longm & "c:\NetIQ_KSdebug\" & KSName & ".txt" & chr$(10) 
	longm = longm & "This may be due to file being open." & chr$(10)
	longm = longm & "Debugging will be stopped for this script," & chr$(10)
	longm = longm & "Until problem Is fixed."
	MSActions 1,eventmsg , AKPID, resname, longm
	Openfilefail = true
	Resume Next 
Case Else
	If DO_DEBUG  = "y" Then
		Print #2 , Now() & "        " & "Error has occured, exiting script"
		Print #2 , Now() & "        " & Err.description
		Close #2
	End If
	mcabort resname,str(Err.Number)& " " & Err.description
End Select


main_exit:

End Sub

'### End KPS Section


